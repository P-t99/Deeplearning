var dataJson = {"arch":{"ispc":true,"isunix":false,"ismac":false},"build":"nczallcode","ref":false,"files":[{"name":"ert_main.c","type":"source","group":"main","path":"E:\\repository\\Deeplearning\\small\\nczallcode_ert_rtw","tag":"","groupDisplay":"主文件","code":"/*\r\n * Academic License - for use in teaching, academic research, and meeting\r\n * course requirements at degree granting institutions only.  Not for\r\n * government, commercial, or other organizational use.\r\n *\r\n * File: ert_main.c\r\n *\r\n * Code generated for Simulink model 'nczallcode'.\r\n *\r\n * Model version                  : 7.17\r\n * Simulink Coder version         : 24.1 (R2024a) 19-Nov-2023\r\n * C/C++ source code generated on : Wed Oct  9 14:09:47 2024\r\n *\r\n * Target selection: ert.tlc\r\n * Embedded hardware selection: NXP->Cortex-M4\r\n * Code generation objectives: Unspecified\r\n * Validation result: Not run\r\n */\r\n\r\n#include <stddef.h>\r\n#include <stdio.h>            /* This example main program uses printf/fflush */\r\n#include \"nczallcode.h\"                /* Model header file */\r\n\r\n/*\r\n * Associating rt_OneStep with a real-time clock or interrupt service routine\r\n * is what makes the generated code \"real-time\".  The function rt_OneStep is\r\n * always associated with the base rate of the model.  Subrates are managed\r\n * by the base rate from inside the generated code.  Enabling/disabling\r\n * interrupts and floating point context switches are target specific.  This\r\n * example code indicates where these should take place relative to executing\r\n * the generated code step function.  Overrun behavior should be tailored to\r\n * your application needs.  This example simply sets an error status in the\r\n * real-time model and returns from rt_OneStep.\r\n */\r\nvoid rt_OneStep(void);\r\nvoid rt_OneStep(void)\r\n{\r\n  static boolean_T OverrunFlag = false;\r\n\r\n  /* Disable interrupts here */\r\n\r\n  /* Check for overrun */\r\n  if (OverrunFlag) {\r\n    rtmSetErrorStatus(nczallcode_M, \"Overrun\");\r\n    return;\r\n  }\r\n\r\n  OverrunFlag = true;\r\n\r\n  /* Save FPU context here (if necessary) */\r\n  /* Re-enable timer or interrupt here */\r\n  /* Set model inputs here */\r\n\r\n  /* Step the model */\r\n  nczallcode_step();\r\n\r\n  /* Get model outputs here */\r\n\r\n  /* Indicate task complete */\r\n  OverrunFlag = false;\r\n\r\n  /* Disable interrupts here */\r\n  /* Restore FPU context here (if necessary) */\r\n  /* Enable interrupts here */\r\n}\r\n\r\n/*\r\n * The example main function illustrates what is required by your\r\n * application code to initialize, execute, and terminate the generated code.\r\n * Attaching rt_OneStep to a real-time clock is target specific. This example\r\n * illustrates how you do this relative to initializing the model.\r\n */\r\nint_T main(int_T argc, const char *argv[])\r\n{\r\n  /* Unused arguments */\r\n  (void)(argc);\r\n  (void)(argv);\r\n\r\n  /* Initialize model */\r\n  nczallcode_initialize();\r\n\r\n  /* Attach rt_OneStep to a timer or interrupt service routine with\r\n   * period 1.0 seconds (base rate of the model) here.\r\n   * The call syntax for rt_OneStep is\r\n   *\r\n   *  rt_OneStep();\r\n   */\r\n  printf(\"Warning: The simulation will run forever. \"\r\n         \"Generated ERT main won't simulate model step behavior. \"\r\n         \"To change this behavior select the 'MAT-file logging' option.\\n\");\r\n  fflush((NULL));\r\n  while (rtmGetErrorStatus(nczallcode_M) == (NULL)) {\r\n    /*  Perform application tasks here */\r\n  }\r\n\r\n  /* Terminate model */\r\n  nczallcode_terminate();\r\n  return 0;\r\n}\r\n\r\n/*\r\n * File trailer for generated code.\r\n *\r\n * [EOF]\r\n */\r\n"},{"name":"nczallcode.c","type":"source","group":"model","path":"E:\\repository\\Deeplearning\\small\\nczallcode_ert_rtw","tag":"","groupDisplay":"模型文件","code":"/*\r\n * Academic License - for use in teaching, academic research, and meeting\r\n * course requirements at degree granting institutions only.  Not for\r\n * government, commercial, or other organizational use.\r\n *\r\n * File: nczallcode.c\r\n *\r\n * Code generated for Simulink model 'nczallcode'.\r\n *\r\n * Model version                  : 7.17\r\n * Simulink Coder version         : 24.1 (R2024a) 19-Nov-2023\r\n * C/C++ source code generated on : Wed Oct  9 14:09:47 2024\r\n *\r\n * Target selection: ert.tlc\r\n * Embedded hardware selection: NXP->Cortex-M4\r\n * Code generation objectives: Unspecified\r\n * Validation result: Not run\r\n */\r\n\r\n#include \"nczallcode.h\"\r\n#include \"rtwtypes.h\"\r\n#include \"nczallcode_types.h\"\r\n#include <math.h>\r\n#include \"rt_nonfinite.h\"\r\n#include <string.h>\r\n\r\n/* Block states (default storage) */\r\nDW_nczallcode_T nczallcode_DW;\r\n\r\n/* External inputs (root inport signals with default storage) */\r\nExtU_nczallcode_T nczallcode_U;\r\n\r\n/* External outputs (root outports fed by signals with default storage) */\r\nExtY_nczallcode_T nczallcode_Y;\r\n\r\n/* Real-time model */\r\nstatic RT_MODEL_nczallcode_T nczallcode_M_;\r\nRT_MODEL_nczallcode_T *const nczallcode_M = &nczallcode_M_;\r\n\r\n/* Forward declaration for local functions */\r\nstatic void nczallcode_strtrim(const char_T x_data[], const int32_T x_size[2],\r\n  char_T y_data[], int32_T y_size[2]);\r\nstatic void nczallcode_insertionsort(int32_T x[3], const\r\n  cell_wrap_1_nczallcode_T cmp_workspace_c[3]);\r\nstatic void nczallcode_introsort(int32_T x[3], const cell_wrap_1_nczallcode_T\r\n  cmp_workspace_c[3]);\r\nstatic uint8_T nczallc_categorical_categorical(const cell_wrap_1_nczallcode_T\r\n  *inputData, const cell_wrap_1_nczallcode_T varargin_1[3]);\r\nstatic uint8_T ncza_ClassificationTree_predict(const real_T\r\n  obj_CutPredictorIndex[227], const real_T obj_Children[454], const real_T\r\n  obj_CutPoint[227], const real_T obj_PruneList[227], const boolean_T\r\n  obj_NanCutPoints[227], const real_T obj_Prior[3], const real_T obj_Cost[9],\r\n  const real_T obj_ClassProbability[681], const real32_T Xin[160]);\r\n\r\n/* Function for MATLAB Function: '<Root>/MATLAB Function' */\r\nstatic void nczallcode_strtrim(const char_T x_data[], const int32_T x_size[2],\r\n  char_T y_data[], int32_T y_size[2])\r\n{\r\n  int32_T b_j1;\r\n  int32_T i;\r\n  int32_T j2;\r\n  static const boolean_T d[128] = { false, false, false, false, false, false,\r\n    false, false, false, true, true, true, true, true, false, false, false,\r\n    false, false, false, false, false, false, false, false, false, false, false,\r\n    true, true, true, true, true, false, false, false, false, false, false,\r\n    false, false, false, false, false, false, false, false, false, false, false,\r\n    false, false, false, false, false, false, false, false, false, false, false,\r\n    false, false, false, false, false, false, false, false, false, false, false,\r\n    false, false, false, false, false, false, false, false, false, false, false,\r\n    false, false, false, false, false, false, false, false, false, false, false,\r\n    false, false, false, false, false, false, false, false, false, false, false,\r\n    false, false, false, false, false, false, false, false, false, false, false,\r\n    false, false, false, false, false, false, false, false, false, false, false,\r\n    false };\r\n\r\n  b_j1 = 0;\r\n  while ((b_j1 + 1 <= x_size[1]) && d[(int32_T)x_data[b_j1]]) {\r\n    b_j1++;\r\n  }\r\n\r\n  j2 = x_size[1];\r\n  while ((j2 > 0) && d[(int32_T)x_data[j2 - 1]]) {\r\n    j2--;\r\n  }\r\n\r\n  if (b_j1 + 1 > j2) {\r\n    b_j1 = 0;\r\n    j2 = 0;\r\n  }\r\n\r\n  y_size[0] = 1;\r\n  j2 -= b_j1;\r\n  y_size[1] = j2;\r\n  for (i = 0; i < j2; i++) {\r\n    y_data[i] = x_data[b_j1 + i];\r\n  }\r\n}\r\n\r\n/* Function for MATLAB Function: '<Root>/MATLAB Function' */\r\nstatic void nczallcode_insertionsort(int32_T x[3], const\r\n  cell_wrap_1_nczallcode_T cmp_workspace_c[3])\r\n{\r\n  int32_T k;\r\n  for (k = 0; k < 2; k++) {\r\n    int32_T idx;\r\n    int32_T xc;\r\n    boolean_T exitg1;\r\n    xc = x[k + 1] - 1;\r\n    idx = k;\r\n    exitg1 = false;\r\n    while ((!exitg1) && (idx + 1 >= 1)) {\r\n      int32_T b_k;\r\n      int32_T j;\r\n      int32_T n;\r\n      int32_T n_tmp;\r\n      int32_T n_tmp_0;\r\n      boolean_T varargout_1;\r\n      j = x[idx];\r\n      n_tmp = cmp_workspace_c[xc].f1.size[1];\r\n      n_tmp_0 = cmp_workspace_c[x[idx] - 1].f1.size[1];\r\n      n = (int32_T)fmin(n_tmp, n_tmp_0);\r\n      varargout_1 = (n_tmp < n_tmp_0);\r\n      b_k = 0;\r\n      int32_T exitg2;\r\n      do {\r\n        exitg2 = 0;\r\n        if (b_k <= n - 1) {\r\n          char_T tmp;\r\n          char_T tmp_0;\r\n          tmp = cmp_workspace_c[xc].f1.data[0];\r\n          tmp_0 = cmp_workspace_c[x[idx] - 1].f1.data[0];\r\n          if (tmp_0 != tmp) {\r\n            varargout_1 = (tmp < tmp_0);\r\n            exitg2 = 1;\r\n          } else {\r\n            b_k++;\r\n          }\r\n        } else {\r\n          if (n_tmp_0 == n_tmp) {\r\n            varargout_1 = (xc + 1 < j);\r\n          }\r\n\r\n          exitg2 = 1;\r\n        }\r\n      } while (exitg2 == 0);\r\n\r\n      if (varargout_1) {\r\n        x[idx + 1] = x[idx];\r\n        idx--;\r\n      } else {\r\n        exitg1 = true;\r\n      }\r\n    }\r\n\r\n    x[idx + 1] = xc + 1;\r\n  }\r\n}\r\n\r\n/* Function for MATLAB Function: '<Root>/MATLAB Function' */\r\nstatic void nczallcode_introsort(int32_T x[3], const cell_wrap_1_nczallcode_T\r\n  cmp_workspace_c[3])\r\n{\r\n  nczallcode_insertionsort(x, cmp_workspace_c);\r\n}\r\n\r\n/* Function for MATLAB Function: '<Root>/MATLAB Function' */\r\nstatic uint8_T nczallc_categorical_categorical(const cell_wrap_1_nczallcode_T\r\n  *inputData, const cell_wrap_1_nczallcode_T varargin_1[3])\r\n{\r\n  cell_wrap_1_nczallcode_T a[3];\r\n  cell_wrap_1_nczallcode_T b_a;\r\n  int32_T f[3];\r\n  int32_T b_i;\r\n  int32_T exitg2;\r\n  int32_T i;\r\n  int32_T kstr;\r\n  int32_T nb_tmp;\r\n  uint8_T b_codes;\r\n  boolean_T b_bool;\r\n  boolean_T d;\r\n  boolean_T exitg1;\r\n  nczallcode_strtrim(inputData->f1.data, inputData->f1.size, b_a.f1.data,\r\n                     b_a.f1.size);\r\n  for (i = 0; i < 3; i++) {\r\n    nczallcode_strtrim(varargin_1[i].f1.data, varargin_1[i].f1.size, a[i].\r\n                       f1.data, a[i].f1.size);\r\n    f[i] = i + 1;\r\n  }\r\n\r\n  nczallcode_introsort(f, a);\r\n  i = 0;\r\n  b_i = 0;\r\n  exitg1 = false;\r\n  while ((!exitg1) && (b_i < 3)) {\r\n    b_bool = false;\r\n    nb_tmp = a[b_i].f1.size[1];\r\n    d = (b_a.f1.size[1] == 0);\r\n    if (d && (nb_tmp == 0)) {\r\n      b_bool = true;\r\n    } else if (b_a.f1.size[1] == nb_tmp) {\r\n      kstr = 0;\r\n      do {\r\n        exitg2 = 0;\r\n        if (kstr <= nb_tmp - 1) {\r\n          if (b_a.f1.data[0] != a[b_i].f1.data[0]) {\r\n            exitg2 = 1;\r\n          } else {\r\n            kstr++;\r\n          }\r\n        } else {\r\n          b_bool = true;\r\n          exitg2 = 1;\r\n        }\r\n      } while (exitg2 == 0);\r\n    }\r\n\r\n    if (b_bool) {\r\n      i = b_i + 1;\r\n      exitg1 = true;\r\n    } else {\r\n      b_i++;\r\n    }\r\n  }\r\n\r\n  b_codes = (uint8_T)i;\r\n  return b_codes;\r\n}\r\n\r\n/* Function for MATLAB Function: '<Root>/MATLAB Function' */\r\nstatic uint8_T ncza_ClassificationTree_predict(const real_T\r\n  obj_CutPredictorIndex[227], const real_T obj_Children[454], const real_T\r\n  obj_CutPoint[227], const real_T obj_PruneList[227], const boolean_T\r\n  obj_NanCutPoints[227], const real_T obj_Prior[3], const real_T obj_Cost[9],\r\n  const real_T obj_ClassProbability[681], const real32_T Xin[160])\r\n{\r\n  cell_wrap_1_nczallcode_T ain[4];\r\n  cell_wrap_1_nczallcode_T b_ain[4];\r\n  cell_wrap_1_nczallcode_T b[3];\r\n  cell_wrap_1_nczallcode_T a;\r\n  cell_wrap_1_nczallcode_T b_labels;\r\n  cell_wrap_1_nczallcode_T d;\r\n  cell_wrap_1_nczallcode_T e;\r\n  cell_wrap_1_nczallcode_T f;\r\n  real_T x[160];\r\n  real_T b_x[3];\r\n  real_T b_x_0;\r\n  real_T ex;\r\n  int32_T b_k;\r\n  int32_T c_k;\r\n  int32_T idx;\r\n  int32_T iindx;\r\n  int32_T m;\r\n  boolean_T c_x[3];\r\n  boolean_T y;\r\n  static const char_T h[11] = { '<', 'u', 'n', 'd', 'e', 'f', 'i', 'n', 'e', 'd',\r\n    '>' };\r\n\r\n  static const char_T i[3] = { '1', '2', '3' };\r\n\r\n  boolean_T exitg1;\r\n  for (idx = 0; idx < 160; idx++) {\r\n    x[idx] = Xin[idx];\r\n  }\r\n\r\n  m = 0;\r\n  exitg1 = false;\r\n  while (!(exitg1 || (obj_PruneList[m] <= 0.0))) {\r\n    ex = x[(int32_T)obj_CutPredictorIndex[m] - 1];\r\n    if (rtIsNaN(ex) || obj_NanCutPoints[m]) {\r\n      exitg1 = true;\r\n    } else if (ex < obj_CutPoint[m]) {\r\n      m = (int32_T)obj_Children[m << 1] - 1;\r\n    } else {\r\n      m = (int32_T)obj_Children[(m << 1) + 1] - 1;\r\n    }\r\n  }\r\n\r\n  for (idx = 0; idx < 3; idx++) {\r\n    b_x[idx] = (obj_Cost[3 * idx + 1] * obj_ClassProbability[m + 227] +\r\n                obj_Cost[3 * idx] * obj_ClassProbability[m]) + obj_Cost[3 * idx\r\n      + 2] * obj_ClassProbability[m + 454];\r\n  }\r\n\r\n  ex = obj_Prior[0];\r\n  iindx = -1;\r\n  if (obj_Prior[0] < obj_Prior[1]) {\r\n    ex = obj_Prior[1];\r\n    iindx = 0;\r\n  }\r\n\r\n  if (ex < obj_Prior[2]) {\r\n    iindx = 1;\r\n  }\r\n\r\n  if (!rtIsNaN(b_x[0])) {\r\n    idx = 1;\r\n  } else {\r\n    idx = 0;\r\n    b_k = 2;\r\n    exitg1 = false;\r\n    while ((!exitg1) && (b_k < 4)) {\r\n      if (!rtIsNaN(b_x[b_k - 1])) {\r\n        idx = b_k;\r\n        exitg1 = true;\r\n      } else {\r\n        b_k++;\r\n      }\r\n    }\r\n  }\r\n\r\n  if (idx == 0) {\r\n    b_k = 1;\r\n  } else {\r\n    ex = b_x[idx - 1];\r\n    b_k = idx;\r\n    for (c_k = idx + 1; c_k < 4; c_k++) {\r\n      b_x_0 = b_x[c_k - 1];\r\n      if (ex > b_x_0) {\r\n        ex = b_x_0;\r\n        b_k = c_k;\r\n      }\r\n    }\r\n  }\r\n\r\n  c_x[0] = rtIsNaN(obj_ClassProbability[m]);\r\n  c_x[1] = rtIsNaN(obj_ClassProbability[m + 227]);\r\n  c_x[2] = rtIsNaN(obj_ClassProbability[m + 454]);\r\n  y = true;\r\n  m = 0;\r\n  exitg1 = false;\r\n  while ((!exitg1) && (m < 3)) {\r\n    if (!c_x[m]) {\r\n      y = false;\r\n      exitg1 = true;\r\n    } else {\r\n      m++;\r\n    }\r\n  }\r\n\r\n  b_ain[0].f1.size[0] = 1;\r\n  b_ain[0].f1.size[1] = 11;\r\n  for (idx = 0; idx < 11; idx++) {\r\n    b_ain[0].f1.data[idx] = h[idx];\r\n  }\r\n\r\n  b_ain[1].f1.size[0] = 1;\r\n  b_ain[1].f1.size[1] = 1;\r\n  b_ain[1].f1.data[0] = '1';\r\n  b_ain[2].f1.size[0] = 1;\r\n  b_ain[2].f1.size[1] = 1;\r\n  b_ain[2].f1.data[0] = '2';\r\n  b_ain[3].f1.size[0] = 1;\r\n  b_ain[3].f1.size[1] = 1;\r\n  b_ain[3].f1.data[0] = '3';\r\n  b_labels = b_ain[iindx + 2];\r\n  if (!y) {\r\n    b_labels.f1.size[0] = 1;\r\n    b_labels.f1.size[1] = 1;\r\n    b_labels.f1.data[0] = i[b_k - 1];\r\n  }\r\n\r\n  nczallcode_strtrim(b_labels.f1.data, b_labels.f1.size, a.f1.data, a.f1.size);\r\n  iindx = 0;\r\n  y = false;\r\n  if ((a.f1.size[1] == 1) && (a.f1.data[0] == '1')) {\r\n    y = true;\r\n  }\r\n\r\n  if (y) {\r\n    iindx = 1;\r\n  } else {\r\n    y = false;\r\n    if ((a.f1.size[1] == 1) && (a.f1.data[0] == '2')) {\r\n      y = true;\r\n    }\r\n\r\n    if (y) {\r\n      iindx = 2;\r\n    } else {\r\n      y = false;\r\n      if ((a.f1.size[1] == 1) && (a.f1.data[0] == '3')) {\r\n        y = true;\r\n      }\r\n\r\n      if (y) {\r\n        iindx = 3;\r\n      }\r\n    }\r\n  }\r\n\r\n  ain[0].f1.size[0] = 1;\r\n  ain[0].f1.size[1] = 11;\r\n  ain[1].f1.size[0] = 1;\r\n  ain[1].f1.size[1] = 1;\r\n  ain[1].f1.data[0] = '1';\r\n  ain[2].f1.size[0] = 1;\r\n  ain[2].f1.size[1] = 1;\r\n  ain[2].f1.data[0] = '2';\r\n  ain[3].f1.size[0] = 1;\r\n  ain[3].f1.size[1] = 1;\r\n  ain[3].f1.data[0] = '3';\r\n  for (idx = 0; idx < 11; idx++) {\r\n    ain[0].f1.data[idx] = h[idx];\r\n  }\r\n\r\n  b_labels = ain[iindx];\r\n  d.f1.size[0] = 1;\r\n  d.f1.size[1] = 1;\r\n  d.f1.data[0] = '1';\r\n  e.f1.size[0] = 1;\r\n  e.f1.size[1] = 1;\r\n  e.f1.data[0] = '2';\r\n  f.f1.size[0] = 1;\r\n  f.f1.size[1] = 1;\r\n  f.f1.data[0] = '3';\r\n  b[0] = d;\r\n  b[1] = e;\r\n  b[2] = f;\r\n  return nczallc_categorical_categorical(&b_labels, b);\r\n}\r\n\r\n/* Model step function */\r\nvoid nczallcode_step(void)\r\n{\r\n  int32_T b_k;\r\n  int32_T k;\r\n  real32_T frameData[160];\r\n  real32_T tmp[160];\r\n  real32_T X_max;\r\n  real32_T X_min;\r\n  real32_T frameData_0;\r\n  uint8_T a_codes;\r\n  boolean_T tmp_0;\r\n  static const uint8_T b[227] = { 103U, 66U, 147U, 77U, 118U, 17U, 65U, 106U,\r\n    115U, 5U, 91U, 39U, 8U, 5U, 83U, 7U, 139U, 94U, 76U, 64U, 44U, 0U, 1U, 131U,\r\n    114U, 0U, 0U, 0U, 6U, 0U, 0U, 76U, 21U, 75U, 3U, 84U, 16U, 4U, 24U, 13U,\r\n    117U, 0U, 16U, 0U, 0U, 70U, 0U, 0U, 1U, 0U, 0U, 5U, 36U, 0U, 0U, 34U, 80U,\r\n    0U, 0U, 108U, 76U, 24U, 0U, 0U, 4U, 0U, 0U, 15U, 0U, 24U, 0U, 0U, 0U, 82U,\r\n    7U, 0U, 0U, 0U, 0U, 0U, 59U, 23U, 121U, 14U, 0U, 35U, 0U, 98U, 27U, 0U, 0U,\r\n    0U, 0U, 0U, 0U, 1U, 65U, 26U, 2U, 0U, 3U, 0U, 0U, 59U, 4U, 0U, 3U, 0U, 0U,\r\n    0U, 0U, 39U, 26U, 4U, 3U, 0U, 0U, 0U, 18U, 51U, 47U, 0U, 0U, 0U, 0U, 128U,\r\n    0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 14U, 0U, 0U, 0U, 0U, 0U, 38U, 154U, 0U, 0U,\r\n    0U, 159U, 4U, 0U, 0U, 11U, 0U, 143U, 76U, 88U, 4U, 0U, 0U, 27U, 0U, 148U, 3U,\r\n    3U, 0U, 32U, 0U, 7U, 0U, 0U, 18U, 18U, 0U, 0U, 0U, 0U, 0U, 91U, 0U, 0U, 0U,\r\n    1U, 0U, 49U, 0U, 34U, 0U, 0U, 0U, 45U, 0U, 76U, 3U, 9U, 70U, 13U, 15U, 3U,\r\n    0U, 0U, 0U, 93U, 0U, 77U, 0U, 0U, 0U, 0U, 0U, 70U, 0U, 23U, 75U, 26U, 0U, 0U,\r\n    2U, 0U, 0U, 144U, 3U, 0U, 0U, 0U, 7U, 0U, 0U, 0U, 0U };\r\n\r\n  static const uint8_T c[454] = { 2U, 3U, 4U, 5U, 6U, 7U, 8U, 9U, 10U, 11U, 12U,\r\n    13U, 14U, 15U, 16U, 17U, 18U, 19U, 20U, 21U, 22U, 23U, 24U, 25U, 26U, 27U,\r\n    28U, 29U, 30U, 31U, 32U, 33U, 34U, 35U, 36U, 37U, 38U, 39U, 40U, 41U, 42U,\r\n    43U, 0U, 0U, 44U, 45U, 46U, 47U, 48U, 49U, 0U, 0U, 0U, 0U, 0U, 0U, 50U, 51U,\r\n    0U, 0U, 0U, 0U, 52U, 53U, 54U, 55U, 56U, 57U, 58U, 59U, 60U, 61U, 62U, 63U,\r\n    64U, 65U, 66U, 67U, 68U, 69U, 70U, 71U, 0U, 0U, 72U, 73U, 0U, 0U, 0U, 0U,\r\n    74U, 75U, 0U, 0U, 0U, 0U, 76U, 77U, 0U, 0U, 0U, 0U, 78U, 79U, 80U, 81U, 0U,\r\n    0U, 0U, 0U, 82U, 83U, 84U, 85U, 0U, 0U, 0U, 0U, 86U, 87U, 88U, 89U, 90U, 91U,\r\n    0U, 0U, 0U, 0U, 92U, 93U, 0U, 0U, 0U, 0U, 94U, 95U, 0U, 0U, 96U, 97U, 0U, 0U,\r\n    0U, 0U, 0U, 0U, 98U, 99U, 100U, 101U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U,\r\n    102U, 103U, 104U, 105U, 106U, 107U, 108U, 109U, 0U, 0U, 110U, 111U, 0U, 0U,\r\n    112U, 113U, 114U, 115U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 116U,\r\n    117U, 118U, 119U, 120U, 121U, 122U, 123U, 0U, 0U, 124U, 125U, 0U, 0U, 0U, 0U,\r\n    126U, 127U, 128U, 129U, 0U, 0U, 130U, 131U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U,\r\n    132U, 133U, 134U, 135U, 136U, 137U, 138U, 139U, 0U, 0U, 0U, 0U, 0U, 0U, 140U,\r\n    141U, 142U, 143U, 144U, 145U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 146U, 147U, 0U,\r\n    0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 148U, 149U, 0U,\r\n    0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 150U, 151U, 152U, 153U, 0U, 0U, 0U, 0U,\r\n    0U, 0U, 154U, 155U, 156U, 157U, 0U, 0U, 0U, 0U, 158U, 159U, 0U, 0U, 160U,\r\n    161U, 162U, 163U, 164U, 165U, 166U, 167U, 0U, 0U, 0U, 0U, 168U, 169U, 0U, 0U,\r\n    170U, 171U, 172U, 173U, 174U, 175U, 0U, 0U, 176U, 177U, 0U, 0U, 178U, 179U,\r\n    0U, 0U, 0U, 0U, 180U, 181U, 182U, 183U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U,\r\n    0U, 184U, 185U, 0U, 0U, 0U, 0U, 0U, 0U, 186U, 187U, 0U, 0U, 188U, 189U, 0U,\r\n    0U, 190U, 191U, 0U, 0U, 0U, 0U, 0U, 0U, 192U, 193U, 0U, 0U, 194U, 195U, 196U,\r\n    197U, 198U, 199U, 200U, 201U, 202U, 203U, 204U, 205U, 206U, 207U, 0U, 0U, 0U,\r\n    0U, 0U, 0U, 208U, 209U, 0U, 0U, 210U, 211U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U,\r\n    0U, 0U, 212U, 213U, 0U, 0U, 214U, 215U, 216U, 217U, 218U, 219U, 0U, 0U, 0U,\r\n    0U, 220U, 221U, 0U, 0U, 0U, 0U, 222U, 223U, 224U, 225U, 0U, 0U, 0U, 0U, 0U,\r\n    0U, 226U, 227U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U };\r\n\r\n  static const real_T d[227] = { 0.079455266955266945, 0.53629776021080366,\r\n    0.045715778474399164, 0.38924963924963929, 0.36730911786508524,\r\n    0.676923076923077, 0.27115384615384619, 0.0035460992907801418,\r\n    0.060790835181079084, 0.48038461538461541, 0.0066666666666666671,\r\n    0.26365441906653425, 0.54740957966764414, 0.025657894736842105,\r\n    0.04334719334719335, 0.30724070450097846, 0.68072955047899775,\r\n    0.18708333333333332, 0.87655279503105588, 0.033615819209039548,\r\n    0.3149535510937968, 0.0, 0.21527777777777779, 0.49108260325406761,\r\n    0.13871910709540261, 0.0, 0.0, 0.0, 0.020300751879699246, 0.0, 0.0,\r\n    0.13245096172157683, 0.11283565035231384, 0.99315068493150682,\r\n    0.13580246913580246, 0.01626123744050767, 0.38855773726040205,\r\n    0.18568241903502974, 0.73947010869565211, 0.025994318181818181,\r\n    0.6692307692307693, 0.0, 0.72745901639344268, 0.0, 0.0, 0.222970173985087,\r\n    0.0, 0.0, 0.02, 0.0, 0.0, 0.46992257296009532, 0.029144816458249293, 0.0,\r\n    0.0, 0.8609375, 0.021845694799658994, 0.0, 0.0, 0.31608969315499608,\r\n    0.61437177280550781, 0.68878865979381443, 0.0, 0.0, 0.32507976140934941, 0.0,\r\n    0.0, 0.094281972937581837, 0.0, 0.045464982778415611, 0.0, 0.0, 0.0,\r\n    0.77096018735363, 0.26930256236212458, 0.0, 0.0, 0.0, 0.0, 0.0,\r\n    0.44826132771338251, 0.57880149812734083, 0.011634199134199134,\r\n    0.01693173212160554, 0.0, 0.49268104776579358, 0.0, 0.03919904972000679,\r\n    0.055566274358479648, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.007462686567164179,\r\n    0.14491488432998689, 0.7945314998401023, 0.0083333333333333332, 0.0,\r\n    0.006024096385542169, 0.0, 0.0, 0.74106858054226477, 0.15239477503628446,\r\n    0.0, 0.088415803605677024, 0.0, 0.0, 0.0, 0.0, 0.077272727272727271,\r\n    0.12011858515640972, 0.29363399544122432, 0.074308300395256918, 0.0, 0.0,\r\n    0.0, 0.014202256244963738, 0.44816017316017315, 0.074362041467304629, 0.0,\r\n    0.0, 0.0, 0.0, 0.65030120481927711, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\r\n    0.0053191489361702126, 0.0, 0.0, 0.0, 0.0, 0.0, 0.87075393537696766,\r\n    0.034286833855799372, 0.0, 0.0, 0.0, 0.17560837577815508, 0.03125, 0.0, 0.0,\r\n    0.25888888888888889, 0.0, 0.47127329192546585, 0.26235465116279066,\r\n    0.595814307458143, 0.34462444771723122, 0.0, 0.0, 0.014395194697597348, 0.0,\r\n    0.32057562767911818, 0.006024096385542169, 0.020408163265306121, 0.0,\r\n    0.93680445151033387, 0.0, 0.085858585858585856, 0.0, 0.0,\r\n    0.025062656641604009, 0.89333333333333331, 0.0, 0.0, 0.0, 0.0, 0.0,\r\n    0.41981921660528959, 0.0, 0.0, 0.0, 0.10784313725490197, 0.0,\r\n    0.39358974358974358, 0.0, 0.78035379254891457, 0.0, 0.0, 0.0,\r\n    0.035609551738583996, 0.0, 0.99206349206349209, 0.026097560975609758,\r\n    0.022388059701492536, 0.1835016835016835, 0.65535827520608758,\r\n    0.024448419797257006, 0.006024096385542169, 0.0, 0.0, 0.0, 0.99, 0.0,\r\n    0.37331415213091168, 0.0, 0.0, 0.0, 0.0, 0.0, 0.17132541346377822, 0.0,\r\n    0.53178023161863719, 0.22376543209876543, 0.661527514231499, 0.0, 0.0,\r\n    0.032051282051282048, 0.0, 0.0, 0.2784237726098191, 0.10752547687483668, 0.0,\r\n    0.0, 0.0, 0.28855569155446759, 0.0, 0.0, 0.0, 0.0 };\r\n\r\n  static const int8_T e[227] = { 69, 68, 64, 67, 62, 64, 61, 65, 66, 58, 38, 56,\r\n    46, 44, 15, 60, 57, 66, 39, 50, 48, 0, 31, 54, 34, 0, 0, 0, 3, 0, 0, 32, 43,\r\n    55, 3, 63, 52, 15, 17, 44, 33, 0, 37, 0, 0, 47, 0, 0, 19, 0, 0, 3, 22, 0, 0,\r\n    53, 49, 0, 0, 41, 59, 24, 0, 0, 15, 0, 0, 42, 0, 22, 0, 0, 0, 45, 34, 0, 0,\r\n    0, 0, 0, 6, 51, 40, 22, 0, 3, 0, 26, 34, 0, 0, 0, 0, 0, 0, 3, 21, 35, 8, 0,\r\n    12, 0, 0, 36, 12, 0, 28, 0, 0, 0, 0, 12, 12, 3, 3, 0, 0, 0, 18, 23, 17, 0, 0,\r\n    0, 0, 35, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 11, 20, 0, 0, 0, 30, 6,\r\n    0, 0, 7, 0, 14, 20, 29, 27, 0, 0, 7, 0, 10, 6, 17, 0, 25, 0, 12, 0, 0, 5, 10,\r\n    0, 0, 0, 0, 0, 16, 0, 0, 0, 5, 0, 10, 0, 16, 0, 0, 0, 10, 0, 13, 16, 10, 10,\r\n    9, 13, 8, 0, 0, 0, 1, 0, 9, 0, 0, 0, 0, 0, 1, 0, 4, 9, 1, 0, 0, 4, 0, 0, 1,\r\n    1, 0, 0, 0, 1, 0, 0, 0, 0 };\r\n\r\n  static const boolean_T f[227] = { false, false, false, false, false, false,\r\n    false, false, false, false, false, false, false, false, false, false, false,\r\n    false, false, false, false, true, false, false, false, true, true, true,\r\n    false, true, true, false, false, false, false, false, false, false, false,\r\n    false, false, true, false, true, true, false, true, true, false, true, true,\r\n    false, false, true, true, false, false, true, true, false, false, false,\r\n    true, true, false, true, true, false, true, false, true, true, true, false,\r\n    false, true, true, true, true, true, false, false, false, false, true, false,\r\n    true, false, false, true, true, true, true, true, true, false, false, false,\r\n    false, true, false, true, true, false, false, true, false, true, true, true,\r\n    true, false, false, false, false, true, true, true, false, false, false,\r\n    true, true, true, true, false, true, true, true, true, true, true, true,\r\n    true, false, true, true, true, true, true, false, false, true, true, true,\r\n    false, false, true, true, false, true, false, false, false, false, true,\r\n    true, false, true, false, false, false, true, false, true, false, true, true,\r\n    false, false, true, true, true, true, true, false, true, true, true, false,\r\n    true, false, true, false, true, true, true, false, true, false, false, false,\r\n    false, false, false, false, true, true, true, false, true, false, true, true,\r\n    true, true, true, false, true, false, false, false, true, true, false, true,\r\n    true, false, false, true, true, true, false, true, true, true, true };\r\n\r\n  static const int8_T h[9] = { 0, 1, 1, 1, 0, 1, 1, 1, 0 };\r\n\r\n  static const real_T i[681] = { 0.28789281787143539, 0.36051230027900344,\r\n    0.13027522935778282, 0.19149561842027793, 0.79233658903082094,\r\n    0.070237231948609286, 0.59502806736166458, 0.14221628328718314,\r\n    0.27060986821942151, 0.86391412056153061, 0.06999999999999966,\r\n    0.06809184481392716, 0.09359605911330128, 0.00199999999999999,\r\n    0.99196787148594368, 0.62535612535612073, 0.067452882177882881,\r\n    0.4070711896798837, 0.026495726495727161, 0.94432314410480844,\r\n    0.0733452593917708, 0.0, 0.6461538461538463, 0.03870967741935033,\r\n    0.86075949367088633, 0.0, 1.0, 0.0, 0.01428571428571427, 0.0, 1.0,\r\n    0.956427015250544, 0.0, 0.038636363636359347, 0.99633699633699635,\r\n    0.15446265938069603, 0.88827203331019866, 0.0052562417871223404,\r\n    0.87719298245614052, 0.19932432432432443, 0.9867307692307703, 0.0,\r\n    0.28275862068965557, 1.0, 0.0, 0.018680397557176466, 1.0, 1.0, 0.0, 1.0, 0.0,\r\n    0.035714285714285691, 0.985393258426966, 0.0, 0.0, 0.0057204147300672584,\r\n    0.71393643031784937, 0.0, 1.0, 0.0015360983102918574, 0.20200573065903157,\r\n    0.98918083462132889, 0.0, 0.0, 0.54545454545454541, 1.0, 0.0, 0.4609375, 0.0,\r\n    0.992072699149266, 0.0, 0.0, 1.0, 0.0040297960678954579, 0.75925925925925875,\r\n    0.0, 0.0, 0.0, 1.0, 0.0, 0.99772468714448226, 0.0035789213871401334,\r\n    0.0659722222222221, 0.0, 1.0, 0.0016666666666666653, 0.0,\r\n    0.0054777845404749108, 0.91796008869179635, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0,\r\n    0.0, 0.99437984496124088, 0.0040685488842307806, 0.0, 1.0, 0.0, 1.0, 0.0,\r\n    0.003136762860727344, 0.030075187969924869, 0.0, 0.27536231884057949, 0.0,\r\n    0.0, 0.0, 0.5, 0.17391304347826084, 0.0030864197530865167, 0.027027027027027,\r\n    0.99758454106280192, 0.0, 0.0, 0.0, 0.99631067961165087,\r\n    0.003847108463638135, 0.037735849056603737, 0.0, 0.0, 0.0, 0.0,\r\n    0.0031517902168427783, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.79999999999999993,\r\n    0.5714285714285714, 0.00061996280223188568, 0.0, 1.0, 1.0, 0.0, 0.0,\r\n    0.99786075457020629, 0.0023614218245087736, 1.0, 0.0, 0.22222222222222221,\r\n    0.0029139744077026669, 0.051282051282051232, 0.49999999999999994, 0.0,\r\n    0.99863760217983655, 0.0, 0.0015016894005754568, 0.1272727272727272,\r\n    0.00063726739739986937, 0.38297872340425521, 0.0, 1.0, 0.999026479750779,\r\n    0.0, 0.0015035709810798737, 0.0, 0.26923076923076916, 0.0,\r\n    0.000638895987733117, 0.0, 0.81818181818181823, 0.0, 0.0,\r\n    0.99941566030385676, 0.0012532898859504609, 1.0, 0.0, 0.0, 1.0, 0.0,\r\n    0.00064012290359741035, 0.0, 1.0, 0.0, 0.98192771084337349, 1.0,\r\n    0.0012536041118213273, 0.0, 0.00064045087741762161, 0.0, 0.0, 1.0,\r\n    0.0011285266457678814, 0.5, 0.00025916807049368266, 0.033333333333333312,\r\n    0.0, 0.0011525163273144914, 0.00026007802340698947, 0.0, 0.15789473684210528,\r\n    0.0, 0.0, 0.0, 0.00064061499039069422, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0,\r\n    0.00064102564102556, 0.0, 0.0, 0.0, 0.00051301782736943625,\r\n    0.33333333333333331, 0.0, 0.0, 0.0, 0.0, 0.00025843132187617881,\r\n    0.03448275862068962, 0.0, 0.0, 0.0, 0.025974025974025955,\r\n    0.39999999999999997, 0.0, 0.0, 1.0, 0.34180218762659303, 0.44133062811730467,\r\n    0.12577981651374676, 0.56989942951243378, 0.1128474830954074,\r\n    0.097482647881475662, 0.34482758620689968, 0.765963539181091,\r\n    0.25513331290222951, 0.035672997522705627, 0.891666666666667,\r\n    0.023187422237300807, 0.90640394088669862, 0.86000000000000054, 0.0,\r\n    0.0690883190883196, 0.87380138873582336, 0.39775441949354851, 0.0,\r\n    0.020378457059677904, 0.18604651162790603, 1.0, 0.0, 0.019941348973604629,\r\n    0.11075949367088582, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.031590413943355614,\r\n    0.13991769547325053, 0.90079545454546539, 0.00366300366300365,\r\n    0.60655737704917267, 0.0, 0.0, 0.0, 0.23310810810810823,\r\n    0.0082692307692300085, 0.0, 0.71724137931034437, 0.0, 0.0,\r\n    0.020356843491794882, 0.0, 0.0, 0.79545454545454564, 0.0, 0.0,\r\n    0.9642857142857143, 0.0022471910112359895, 0.0, 1.0, 0.932070075080451,\r\n    0.25916870415647825, 1.0, 0.0, 0.079877112135176676, 0.77029608404965921,\r\n    0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5390625, 0.0, 0.0029002320185612142, 1.0,\r\n    1.0, 0.0, 0.020271095371837741, 0.024691358024691384, 1.0, 0.0, 1.0, 0.0,\r\n    0.0, 0.0022753128555176691, 0.9590275206713611, 0.17361111111111097,\r\n    0.90598290598290587, 0.0, 0.0016666666666666653, 1.0, 0.98113207547169745,\r\n    0.0022172949002217182, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.91666666666666663,\r\n    0.00077519379844953986, 0.011219331771666684, 0.96153846153846156, 0.0,\r\n    0.10256410256410248, 0.0, 1.0, 0.97503136762861031, 0.0, 0.0,\r\n    0.7246376811594204, 0.0, 1.0, 0.0, 0.5, 0.043478260869565209,\r\n    0.99444444444444424, 0.0, 0.0024154589371980545, 1.0, 0.0, 0.0,\r\n    0.00077669902912614079, 0.0058327128319674969, 0.83018867924528317, 1.0, 0.0,\r\n    1.0, 0.0, 0.97970247100353258, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0,\r\n    0.19999999999999998, 0.0, 0.99876007439553627, 0.0, 0.0, 0.0, 1.0, 0.0,\r\n    0.000777907429015874, 0.0058414118816796029, 0.0, 1.0, 0.0,\r\n    0.98454326618522947, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0035039419346760679,\r\n    0.34545454545454535, 0.98993117512108209, 0.085106382978723374, 0.0, 0.0,\r\n    0.0, 0.0, 0.0025059516351331234, 0.79999999999999993, 0.73076923076923073,\r\n    0.0, 0.99246102734474928, 0.0, 0.1818181818181818, 0.0, 0.0, 0.0,\r\n    0.0025065797719009222, 0.0, 1.0, 0.0, 0.0, 1.0, 0.9943669184483428, 0.0, 0.0,\r\n    1.0, 0.0, 0.0, 0.0022564874012783892, 1.0, 0.994876392980659, 0.0, 0.0, 0.0,\r\n    0.0021316614420059982, 0.5, 0.99727873525981636, 0.78888888888888908,\r\n    0.072289156626506076, 0.00064028684850805082, 0.998439531859558,\r\n    0.66666666666666663, 0.0, 1.0, 1.0, 0.0, 0.00064061499039069422, 0.0,\r\n    0.99869927159209171, 0.0, 0.0, 1.0, 0.0, 0.0, 0.00038461538461533604,\r\n    0.39999999999999997, 0.99973294164775006, 0.95979899497487431,\r\n    0.00038476337052707716, 0.0, 1.0, 0.84615384615384615, 0.0, 1.0, 0.0,\r\n    0.051724137931034427, 0.0, 1.0, 0.0, 0.0, 0.6, 0.0, 0.0, 0.0,\r\n    0.37030499450197163, 0.19815707160369198, 0.74394495412847028,\r\n    0.23860495206728824, 0.0948159278737718, 0.83228012016991515,\r\n    0.060144346431435687, 0.091820177531726, 0.47425681887834886,\r\n    0.10041288191576375, 0.038333333333333129, 0.90872073294877209, 0.0,\r\n    0.13799999999999946, 0.008032128514056297, 0.30555555555555974,\r\n    0.058745729086293816, 0.19517439082656779, 0.97350427350427282,\r\n    0.035298398835513611, 0.74060822898032308, 0.0, 0.3538461538461537,\r\n    0.94134897360704506, 0.02848101265822776, 0.0, 0.0, 0.0, 0.98571428571428577,\r\n    1.0, 0.0, 0.011982570806100398, 0.8600823045267495, 0.0605681818181752, 0.0,\r\n    0.23897996357013127, 0.11172796668980135, 0.99474375821287775,\r\n    0.12280701754385953, 0.56756756756756721, 0.0049999999999995378, 1.0, 0.0,\r\n    0.0, 1.0, 0.96096275895102856, 0.0, 0.0, 0.20454545454545442, 0.0, 1.0, 0.0,\r\n    0.012359550561797942, 1.0, 0.0, 0.062209510189481752, 0.026894865525672305,\r\n    0.0, 0.0, 0.91858678955453144, 0.027698185291309175, 0.010819165378671072,\r\n    1.0, 1.0, 0.45454545454545453, 0.0, 1.0, 0.0, 1.0, 0.0050270688321727743,\r\n    0.0, 0.0, 0.0, 0.97569910856026676, 0.21604938271604981, 0.0, 1.0, 0.0, 0.0,\r\n    1.0, 0.0, 0.037393557941498762, 0.76041666666666685, 0.094017094017094127,\r\n    0.0, 0.99666666666666659, 0.0, 0.013390139987827563, 0.079822616407981925,\r\n    0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.083333333333333343, 0.0048449612403096273,\r\n    0.98471211934410252, 0.038461538461538443, 0.0, 0.89743589743589758, 0.0,\r\n    0.0, 0.021831869510662311, 0.96992481203007508, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0,\r\n    0.78260869565217384, 0.0024691358024692134, 0.97297297297297292, 0.0, 0.0,\r\n    1.0, 1.0, 0.0029126213592230278, 0.99032017870439437, 0.13207547169811309,\r\n    0.0, 1.0, 0.0, 1.0, 0.017145738779624671, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0,\r\n    0.4285714285714286, 0.00061996280223188568, 1.0, 0.0, 0.0, 0.0, 1.0,\r\n    0.0013613380007777794, 0.99179716629381165, 0.0, 0.0, 0.77777777777777768,\r\n    0.012542759407067984, 0.94871794871794868, 0.5, 0.0, 0.0013623978201633595,\r\n    0.0, 0.99499436866474844, 0.52727272727272734, 0.0094315574815180738,\r\n    0.53191489361702138, 1.0, 0.0, 0.00097352024922109229, 1.0,\r\n    0.995990477383787, 0.2, 0.0, 1.0, 0.0069000766675176711, 1.0, 0.0, 1.0, 1.0,\r\n    0.00058433969614330318, 0.99624013034214864, 0.0, 0.0, 1.0, 0.0, 0.0,\r\n    0.0049929586480598051, 1.0, 0.0, 0.0, 0.018072289156626512, 0.0,\r\n    0.99648990848690033, 0.0, 0.0044831561419233553, 1.0, 1.0, 0.0,\r\n    0.99673981191222616, 0.0, 0.0024620966696899857, 0.17777777777777765,\r\n    0.927710843373494, 0.99820719682417747, 0.0013003901170349475,\r\n    0.33333333333333331, 0.8421052631578948, 0.0, 0.0, 1.0, 0.9987187700192186,\r\n    0.0, 0.0013007284079082657, 0.0, 1.0, 0.0, 1.0, 0.0, 0.99897435897435916,\r\n    0.60000000000000009, 0.00026705835224993352, 0.04020100502512558,\r\n    0.99910221880210348, 0.66666666666666674, 0.0, 0.15384615384615385, 1.0, 0.0,\r\n    0.9997415686781238, 0.91379310344827591, 1.0, 0.0, 1.0, 0.974025974025974,\r\n    0.0, 1.0, 1.0, 0.0 };\r\n\r\n  boolean_T exitg1;\r\n\r\n  /* Outport: '<Root>/pos' incorporates:\r\n   *  MATLAB Function: '<Root>/MATLAB Function'\r\n   */\r\n  nczallcode_Y.pos = -nczallcode_DW.VARN;\r\n  for (k = 0; k < 160; k++) {\r\n    /* MATLAB Function: '<Root>/MATLAB Function' incorporates:\r\n     *  Inport: '<Root>/frameData'\r\n     */\r\n    frameData[k] = roundf(nczallcode_U.frameData[k] / 6.0F);\r\n\r\n    /* Outport: '<Root>/frame_img' incorporates:\r\n     *  MATLAB Function: '<Root>/MATLAB Function'\r\n     */\r\n    nczallcode_Y.frame_img[k] = -nczallcode_DW.VARN;\r\n  }\r\n\r\n  /* MATLAB Function: '<Root>/MATLAB Function' incorporates:\r\n   *  Inport: '<Root>/frameData'\r\n   */\r\n  nczallcode_DW.SEND_DATA_N++;\r\n  if (nczallcode_DW.SEND_DATA_N >= 4.0F) {\r\n    if (!nczallcode_DW.treeModel_not_empty) {\r\n      for (k = 0; k < 227; k++) {\r\n        nczallcode_DW.treeModel.CutPredictorIndex[k] = b[k];\r\n      }\r\n\r\n      for (k = 0; k < 454; k++) {\r\n        nczallcode_DW.treeModel.Children[k] = c[k];\r\n      }\r\n\r\n      for (k = 0; k < 227; k++) {\r\n        nczallcode_DW.treeModel.CutPoint[k] = d[k];\r\n        nczallcode_DW.treeModel.PruneList[k] = e[k];\r\n        nczallcode_DW.treeModel.NanCutPoints[k] = f[k];\r\n        nczallcode_DW.treeModel.InfCutPoints[k] = false;\r\n      }\r\n\r\n      nczallcode_DW.treeModel.ClassNamesLength[0] = 1;\r\n      nczallcode_DW.treeModel.Prior[0] = 0.28789281787140458;\r\n      nczallcode_DW.treeModel.ClassNamesLength[1] = 1;\r\n      nczallcode_DW.treeModel.Prior[1] = 0.34180218762659875;\r\n      nczallcode_DW.treeModel.ClassNamesLength[2] = 1;\r\n      nczallcode_DW.treeModel.Prior[2] = 0.37030499450199666;\r\n      for (k = 0; k < 9; k++) {\r\n        nczallcode_DW.treeModel.Cost[k] = h[k];\r\n      }\r\n\r\n      nczallcode_DW.treeModel.CharClassNamesLength[0] = 1;\r\n      nczallcode_DW.treeModel.CharClassNamesLength[1] = 1;\r\n      nczallcode_DW.treeModel.CharClassNamesLength[2] = 1;\r\n      memcpy(&nczallcode_DW.treeModel.ClassProbability[0], &i[0], 681U * sizeof\r\n             (real_T));\r\n      nczallcode_DW.treeModel_not_empty = true;\r\n    }\r\n\r\n    tmp_0 = !rtIsNaNF(nczallcode_U.frameData[0]);\r\n    if (tmp_0) {\r\n      k = 1;\r\n    } else {\r\n      k = 0;\r\n      b_k = 2;\r\n      exitg1 = false;\r\n      while ((!exitg1) && (b_k < 161)) {\r\n        if (!rtIsNaNF(nczallcode_U.frameData[b_k - 1])) {\r\n          k = b_k;\r\n          exitg1 = true;\r\n        } else {\r\n          b_k++;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (k == 0) {\r\n      X_min = nczallcode_U.frameData[0];\r\n    } else {\r\n      X_min = nczallcode_U.frameData[k - 1];\r\n      for (b_k = k + 1; b_k < 161; b_k++) {\r\n        frameData_0 = nczallcode_U.frameData[b_k - 1];\r\n        if (X_min > frameData_0) {\r\n          X_min = frameData_0;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (tmp_0) {\r\n      k = 1;\r\n    } else {\r\n      k = 0;\r\n      b_k = 2;\r\n      exitg1 = false;\r\n      while ((!exitg1) && (b_k < 161)) {\r\n        if (!rtIsNaNF(nczallcode_U.frameData[b_k - 1])) {\r\n          k = b_k;\r\n          exitg1 = true;\r\n        } else {\r\n          b_k++;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (k == 0) {\r\n      X_max = nczallcode_U.frameData[0];\r\n    } else {\r\n      X_max = nczallcode_U.frameData[k - 1];\r\n      for (b_k = k + 1; b_k < 161; b_k++) {\r\n        frameData_0 = nczallcode_U.frameData[b_k - 1];\r\n        if (X_max < frameData_0) {\r\n          X_max = frameData_0;\r\n        }\r\n      }\r\n    }\r\n\r\n    frameData_0 = (X_max - X_min) + 2.22044605E-16F;\r\n    for (k = 0; k < 160; k++) {\r\n      tmp[k] = (nczallcode_U.frameData[k] - X_min) / frameData_0;\r\n    }\r\n\r\n    a_codes = ncza_ClassificationTree_predict\r\n      (nczallcode_DW.treeModel.CutPredictorIndex,\r\n       nczallcode_DW.treeModel.Children, nczallcode_DW.treeModel.CutPoint,\r\n       nczallcode_DW.treeModel.PruneList, nczallcode_DW.treeModel.NanCutPoints,\r\n       nczallcode_DW.treeModel.Prior, nczallcode_DW.treeModel.Cost,\r\n       nczallcode_DW.treeModel.ClassProbability, tmp);\r\n\r\n    /* Outport: '<Root>/pos' incorporates:\r\n     *  Inport: '<Root>/frameData'\r\n     */\r\n    nczallcode_Y.pos = a_codes;\r\n    if (a_codes == 0) {\r\n      /* Outport: '<Root>/pos' */\r\n      nczallcode_Y.pos = (rtNaNF);\r\n    }\r\n\r\n    nczallcode_DW.BREATH_MIN += nczallcode_DW.BREATH_RATE;\r\n    nczallcode_DW.SEND_DATA_N = nczallcode_DW.VARN - 1.0F;\r\n  }\r\n\r\n  if (nczallcode_DW.MIN_SEND_N >= 720.0F) {\r\n    /* Outport: '<Root>/frame_img' */\r\n    memcpy(&nczallcode_Y.frame_img[0], &frameData[0], 160U * sizeof(real32_T));\r\n  }\r\n\r\n  /* Outport: '<Root>/bodyMovementData' incorporates:\r\n   *  MATLAB Function: '<Root>/MATLAB Function'\r\n   */\r\n  for (k = 0; k < 24; k++) {\r\n    nczallcode_Y.bodyMovementData[k] = -nczallcode_DW.VARN;\r\n  }\r\n\r\n  /* End of Outport: '<Root>/bodyMovementData' */\r\n\r\n  /* Outport: '<Root>/rate' incorporates:\r\n   *  MATLAB Function: '<Root>/MATLAB Function'\r\n   */\r\n  nczallcode_Y.rate = -nczallcode_DW.VARN;\r\n\r\n  /* Outport: '<Root>/strokerisk' incorporates:\r\n   *  MATLAB Function: '<Root>/MATLAB Function'\r\n   */\r\n  nczallcode_Y.strokerisk = -nczallcode_DW.VARN;\r\n\r\n  /* Outport: '<Root>/stateInBbed' incorporates:\r\n   *  MATLAB Function: '<Root>/MATLAB Function'\r\n   */\r\n  nczallcode_Y.stateInBbed = -nczallcode_DW.VARN;\r\n\r\n  /* Outport: '<Root>/inBedtime' incorporates:\r\n   *  MATLAB Function: '<Root>/MATLAB Function'\r\n   */\r\n  nczallcode_Y.inBedtime = -nczallcode_DW.VARN;\r\n\r\n  /* Outport: '<Root>/rateMin' incorporates:\r\n   *  MATLAB Function: '<Root>/MATLAB Function'\r\n   */\r\n  nczallcode_Y.rateMin = -nczallcode_DW.VARN;\r\n\r\n  /* Outport: '<Root>/strokeriskMin' incorporates:\r\n   *  MATLAB Function: '<Root>/MATLAB Function'\r\n   */\r\n  nczallcode_Y.strokeriskMin = -nczallcode_DW.VARN;\r\n\r\n  /* Outport: '<Root>/statesleep' incorporates:\r\n   *  MATLAB Function: '<Root>/MATLAB Function'\r\n   */\r\n  for (k = 0; k < 48; k++) {\r\n    nczallcode_Y.statesleep[k] = -nczallcode_DW.VARN;\r\n  }\r\n\r\n  /* End of Outport: '<Root>/statesleep' */\r\n\r\n  /* Outport: '<Root>/timt' incorporates:\r\n   *  MATLAB Function: '<Root>/MATLAB Function'\r\n   */\r\n  nczallcode_Y.timt = -nczallcode_DW.VARN;\r\n\r\n  /* Outport: '<Root>/meansn' incorporates:\r\n   *  MATLAB Function: '<Root>/MATLAB Function'\r\n   */\r\n  nczallcode_Y.meansn = -nczallcode_DW.VARN;\r\n}\r\n\r\n/* Model initialize function */\r\nvoid nczallcode_initialize(void)\r\n{\r\n  /* Start for DataStoreMemory: '<Root>/Data Store Memory19' */\r\n  nczallcode_DW.VARN = 1.0F;\r\n}\r\n\r\n/* Model terminate function */\r\nvoid nczallcode_terminate(void)\r\n{\r\n  /* (no terminate code required) */\r\n}\r\n\r\n/*\r\n * File trailer for generated code.\r\n *\r\n * [EOF]\r\n */\r\n"},{"name":"nczallcode.h","type":"header","group":"model","path":"E:\\repository\\Deeplearning\\small\\nczallcode_ert_rtw","tag":"","groupDisplay":"模型文件","code":"/*\r\n * Academic License - for use in teaching, academic research, and meeting\r\n * course requirements at degree granting institutions only.  Not for\r\n * government, commercial, or other organizational use.\r\n *\r\n * File: nczallcode.h\r\n *\r\n * Code generated for Simulink model 'nczallcode'.\r\n *\r\n * Model version                  : 7.17\r\n * Simulink Coder version         : 24.1 (R2024a) 19-Nov-2023\r\n * C/C++ source code generated on : Wed Oct  9 14:09:47 2024\r\n *\r\n * Target selection: ert.tlc\r\n * Embedded hardware selection: NXP->Cortex-M4\r\n * Code generation objectives: Unspecified\r\n * Validation result: Not run\r\n */\r\n\r\n#ifndef nczallcode_h_\r\n#define nczallcode_h_\r\n#ifndef nczallcode_COMMON_INCLUDES_\r\n#define nczallcode_COMMON_INCLUDES_\r\n#include \"rtwtypes.h\"\r\n#include \"rtw_continuous.h\"\r\n#include \"rtw_solver.h\"\r\n#include \"rt_nonfinite.h\"\r\n#include \"math.h\"\r\n#endif                                 /* nczallcode_COMMON_INCLUDES_ */\r\n\r\n#include \"nczallcode_types.h\"\r\n#include \"rtGetNaN.h\"\r\n\r\n/* Macros for accessing real-time model data structure */\r\n#ifndef rtmGetErrorStatus\r\n#define rtmGetErrorStatus(rtm)         ((rtm)->errorStatus)\r\n#endif\r\n\r\n#ifndef rtmSetErrorStatus\r\n#define rtmSetErrorStatus(rtm, val)    ((rtm)->errorStatus = (val))\r\n#endif\r\n\r\n/* Block states (default storage) for system '<Root>' */\r\ntypedef struct {\r\n  ClassificationTree_nczallcode_T treeModel;/* '<Root>/MATLAB Function' */\r\n  real_T Awake_sleep_average[48];      /* '<Root>/Data Store Memory22' */\r\n  real_T onbednum;                     /* '<Root>/Data Store Memory23' */\r\n  real_T BREATH_COUNT;                 /* '<Root>/Data Store Memory36' */\r\n  real_T TRIGGER_COUNT;                /* '<Root>/Data Store Memory37' */\r\n  real_T previousFramesArray[1536];    /* '<Root>/Data Store Memory41' */\r\n  real_T BREATH_COUNTArray[16];        /* '<Root>/Data Store Memory42' */\r\n  real_T conditionTriggerHistoryArray[80];/* '<Root>/Data Store Memory43' */\r\n  real_T TRIGGER_COUNTArray[16];       /* '<Root>/Data Store Memory44' */\r\n  real_T dominantFrequencyArray[16];   /* '<Root>/Data Store Memory45' */\r\n  real32_T G_INBED_TIM;                /* '<Root>/Data Store Memory' */\r\n  real32_T BREATH_RATE;                /* '<Root>/Data Store Memory10' */\r\n  real32_T MIN_SEND_N;                 /* '<Root>/Data Store Memory11' */\r\n  real32_T STROKE_RISK_MIN;            /* '<Root>/Data Store Memory12' */\r\n  real32_T BREATH_MIN;                 /* '<Root>/Data Store Memory13' */\r\n  real32_T BATCH_FRA_MEAN[720];        /* '<Root>/Data Store Memory14' */\r\n  real32_T TWENTY_SEC;                 /* '<Root>/Data Store Memory15' */\r\n  real32_T STATE_SLEEP[48];            /* '<Root>/Data Store Memory16' */\r\n  real32_T FRAME_DIFF[16];             /* '<Root>/Data Store Memory17' */\r\n  real32_T ITER;                       /* '<Root>/Data Store Memory18' */\r\n  real32_T VARN;                       /* '<Root>/Data Store Memory19' */\r\n  real32_T G_STATE_INBED;              /* '<Root>/Data Store Memory2' */\r\n  real32_T L_R_M_FREATUE[180];         /* '<Root>/Data Store Memory20' */\r\n  real32_T LEFT_RIGHT_MOVE_SUM[4];     /* '<Root>/Data Store Memory21' */\r\n  real32_T R_ALARM[180];               /* '<Root>/Data Store Memory24' */\r\n  real32_T BREATH_SW;                  /* '<Root>/Data Store Memory26' */\r\n  real32_T PRESSURE_MEAN;              /* '<Root>/Data Store Memory27' */\r\n  real32_T ALARM_NUM;                  /* '<Root>/Data Store Memory3' */\r\n  real32_T BODY_MOVE_NUM;              /* '<Root>/Data Store Memory30' */\r\n  real32_T ALL_MOVE_NUM;               /* '<Root>/Data Store Memory32' */\r\n  real32_T ONBED_SW;                   /* '<Root>/Data Store Memory33' */\r\n  real32_T inBedTimer;                 /* '<Root>/Data Store Memory34' */\r\n  real32_T PRO_FRAME[160];             /* '<Root>/Data Store Memory4' */\r\n  real32_T NCZ_TIMES;                  /* '<Root>/Data Store Memory5' */\r\n  real32_T realArr[4000];              /* '<Root>/Data Store Memory6' */\r\n  real32_T ALL_DIFF_IMG[24];           /* '<Root>/Data Store Memory7' */\r\n  real32_T SEND_DATA_N;                /* '<Root>/Data Store Memory8' */\r\n  real32_T STROKE_RISK;                /* '<Root>/Data Store Memory9' */\r\n  boolean_T treeModel_not_empty;       /* '<Root>/MATLAB Function' */\r\n} DW_nczallcode_T;\r\n\r\n/* External inputs (root inport signals with default storage) */\r\ntypedef struct {\r\n  real32_T frameData[160];             /* '<Root>/frameData' */\r\n  real32_T tim;                        /* '<Root>/tim ' */\r\n} ExtU_nczallcode_T;\r\n\r\n/* External outputs (root outports fed by signals with default storage) */\r\ntypedef struct {\r\n  real32_T bodyMovementData[24];       /* '<Root>/bodyMovementData' */\r\n  real32_T rate;                       /* '<Root>/rate' */\r\n  real32_T strokerisk;                 /* '<Root>/strokerisk' */\r\n  real32_T stateInBbed;                /* '<Root>/stateInBbed' */\r\n  real32_T inBedtime;                  /* '<Root>/inBedtime' */\r\n  real32_T rateMin;                    /* '<Root>/rateMin' */\r\n  real32_T strokeriskMin;              /* '<Root>/strokeriskMin' */\r\n  real32_T statesleep[48];             /* '<Root>/statesleep' */\r\n  real32_T timt;                       /* '<Root>/timt' */\r\n  real32_T meansn;                     /* '<Root>/meansn' */\r\n  real32_T frame_img[160];             /* '<Root>/frame_img' */\r\n  real32_T pos;                        /* '<Root>/pos' */\r\n} ExtY_nczallcode_T;\r\n\r\n/* Real-time Model Data Structure */\r\nstruct tag_RTM_nczallcode_T {\r\n  const char_T * volatile errorStatus;\r\n};\r\n\r\n/* Block states (default storage) */\r\nextern DW_nczallcode_T nczallcode_DW;\r\n\r\n/* External inputs (root inport signals with default storage) */\r\nextern ExtU_nczallcode_T nczallcode_U;\r\n\r\n/* External outputs (root outports fed by signals with default storage) */\r\nextern ExtY_nczallcode_T nczallcode_Y;\r\n\r\n/* Model entry point functions */\r\nextern void nczallcode_initialize(void);\r\nextern void nczallcode_step(void);\r\nextern void nczallcode_terminate(void);\r\n\r\n/* Real-time Model object */\r\nextern RT_MODEL_nczallcode_T *const nczallcode_M;\r\n\r\n/*-\r\n * The generated code includes comments that allow you to trace directly\r\n * back to the appropriate location in the model.  The basic format\r\n * is <system>/block_name, where system is the system number (uniquely\r\n * assigned by Simulink) and block_name is the name of the block.\r\n *\r\n * Use the MATLAB hilite_system command to trace the generated code back\r\n * to the model.  For example,\r\n *\r\n * hilite_system('<S3>')    - opens system 3\r\n * hilite_system('<S3>/Kp') - opens and selects block Kp which resides in S3\r\n *\r\n * Here is the system hierarchy for this model\r\n *\r\n * '<Root>' : 'nczallcode'\r\n * '<S1>'   : 'nczallcode/MATLAB Function'\r\n */\r\n#endif                                 /* nczallcode_h_ */\r\n\r\n/*\r\n * File trailer for generated code.\r\n *\r\n * [EOF]\r\n */\r\n"},{"name":"nczallcode_private.h","type":"header","group":"model","path":"E:\\repository\\Deeplearning\\small\\nczallcode_ert_rtw","tag":"","groupDisplay":"模型文件","code":"/*\r\n * Academic License - for use in teaching, academic research, and meeting\r\n * course requirements at degree granting institutions only.  Not for\r\n * government, commercial, or other organizational use.\r\n *\r\n * File: nczallcode_private.h\r\n *\r\n * Code generated for Simulink model 'nczallcode'.\r\n *\r\n * Model version                  : 7.17\r\n * Simulink Coder version         : 24.1 (R2024a) 19-Nov-2023\r\n * C/C++ source code generated on : Wed Oct  9 14:09:47 2024\r\n *\r\n * Target selection: ert.tlc\r\n * Embedded hardware selection: NXP->Cortex-M4\r\n * Code generation objectives: Unspecified\r\n * Validation result: Not run\r\n */\r\n\r\n#ifndef nczallcode_private_h_\r\n#define nczallcode_private_h_\r\n#include \"rtwtypes.h\"\r\n#include \"nczallcode_types.h\"\r\n#include \"rtw_continuous.h\"\r\n#include \"rtw_solver.h\"\r\n#endif                                 /* nczallcode_private_h_ */\r\n\r\n/*\r\n * File trailer for generated code.\r\n *\r\n * [EOF]\r\n */\r\n"},{"name":"nczallcode_types.h","type":"header","group":"model","path":"E:\\repository\\Deeplearning\\small\\nczallcode_ert_rtw","tag":"","groupDisplay":"模型文件","code":"/*\r\n * Academic License - for use in teaching, academic research, and meeting\r\n * course requirements at degree granting institutions only.  Not for\r\n * government, commercial, or other organizational use.\r\n *\r\n * File: nczallcode_types.h\r\n *\r\n * Code generated for Simulink model 'nczallcode'.\r\n *\r\n * Model version                  : 7.17\r\n * Simulink Coder version         : 24.1 (R2024a) 19-Nov-2023\r\n * C/C++ source code generated on : Wed Oct  9 14:09:47 2024\r\n *\r\n * Target selection: ert.tlc\r\n * Embedded hardware selection: NXP->Cortex-M4\r\n * Code generation objectives: Unspecified\r\n * Validation result: Not run\r\n */\r\n\r\n#ifndef nczallcode_types_h_\r\n#define nczallcode_types_h_\r\n#include \"rtwtypes.h\"\r\n\r\n/* Custom Type definition for MATLAB Function: '<Root>/MATLAB Function' */\r\n#ifndef struct_tag_LxXjg0auJ7ZK291Djn5EvG\r\n#define struct_tag_LxXjg0auJ7ZK291Djn5EvG\r\n\r\nstruct tag_LxXjg0auJ7ZK291Djn5EvG\r\n{\r\n  real_T CutPredictorIndex[227];\r\n  real_T Children[454];\r\n  real_T CutPoint[227];\r\n  real_T PruneList[227];\r\n  boolean_T NanCutPoints[227];\r\n  boolean_T InfCutPoints[227];\r\n  int32_T ClassNamesLength[3];\r\n  real_T Prior[3];\r\n  real_T Cost[9];\r\n  int32_T CharClassNamesLength[3];\r\n  real_T ClassProbability[681];\r\n};\r\n\r\n#endif                                 /* struct_tag_LxXjg0auJ7ZK291Djn5EvG */\r\n\r\n#ifndef typedef_ClassificationTree_nczallcode_T\r\n#define typedef_ClassificationTree_nczallcode_T\r\n\r\ntypedef struct tag_LxXjg0auJ7ZK291Djn5EvG ClassificationTree_nczallcode_T;\r\n\r\n#endif                             /* typedef_ClassificationTree_nczallcode_T */\r\n\r\n#ifndef struct_emxArray_char_T_1x11\r\n#define struct_emxArray_char_T_1x11\r\n\r\nstruct emxArray_char_T_1x11\r\n{\r\n  char_T data[11];\r\n  int32_T size[2];\r\n};\r\n\r\n#endif                                 /* struct_emxArray_char_T_1x11 */\r\n\r\n#ifndef typedef_emxArray_char_T_1x11_nczallco_T\r\n#define typedef_emxArray_char_T_1x11_nczallco_T\r\n\r\ntypedef struct emxArray_char_T_1x11 emxArray_char_T_1x11_nczallco_T;\r\n\r\n#endif                             /* typedef_emxArray_char_T_1x11_nczallco_T */\r\n\r\n/* Custom Type definition for MATLAB Function: '<Root>/MATLAB Function' */\r\n#ifndef struct_tag_QjBXI9rtubOTIDmB1WWuBH\r\n#define struct_tag_QjBXI9rtubOTIDmB1WWuBH\r\n\r\nstruct tag_QjBXI9rtubOTIDmB1WWuBH\r\n{\r\n  emxArray_char_T_1x11_nczallco_T f1;\r\n};\r\n\r\n#endif                                 /* struct_tag_QjBXI9rtubOTIDmB1WWuBH */\r\n\r\n#ifndef typedef_cell_wrap_1_nczallcode_T\r\n#define typedef_cell_wrap_1_nczallcode_T\r\n\r\ntypedef struct tag_QjBXI9rtubOTIDmB1WWuBH cell_wrap_1_nczallcode_T;\r\n\r\n#endif                                 /* typedef_cell_wrap_1_nczallcode_T */\r\n\r\n/* Forward declaration for rtModel */\r\ntypedef struct tag_RTM_nczallcode_T RT_MODEL_nczallcode_T;\r\n\r\n#endif                                 /* nczallcode_types_h_ */\r\n\r\n/*\r\n * File trailer for generated code.\r\n *\r\n * [EOF]\r\n */\r\n"},{"name":"rtGetNaN.c","type":"source","group":"utility","path":"E:\\repository\\Deeplearning\\small\\nczallcode_ert_rtw","tag":"","groupDisplay":"实用工具文件","code":"/*\r\n * Academic License - for use in teaching, academic research, and meeting\r\n * course requirements at degree granting institutions only.  Not for\r\n * government, commercial, or other organizational use.\r\n *\r\n * File: rtGetNaN.c\r\n *\r\n * Code generated for Simulink model 'nczallcode'.\r\n *\r\n * Model version                  : 7.17\r\n * Simulink Coder version         : 24.1 (R2024a) 19-Nov-2023\r\n * C/C++ source code generated on : Wed Oct  9 14:09:47 2024\r\n *\r\n * Target selection: ert.tlc\r\n * Embedded hardware selection: NXP->Cortex-M4\r\n * Code generation objectives: Unspecified\r\n * Validation result: Not run\r\n */\r\n\r\n#include \"rtwtypes.h\"\r\n#include \"rtGetNaN.h\"\r\n\r\n/* Return rtNaN needed by the generated code. */\r\nreal_T rtGetNaN(void)\r\n{\r\n  return rtNaN;\r\n}\r\n\r\n/* Return rtNaNF needed by the generated code. */\r\nreal32_T rtGetNaNF(void)\r\n{\r\n  return rtNaNF;\r\n}\r\n\r\n/*\r\n * File trailer for generated code.\r\n *\r\n * [EOF]\r\n */\r\n"},{"name":"rtGetNaN.h","type":"header","group":"utility","path":"E:\\repository\\Deeplearning\\small\\nczallcode_ert_rtw","tag":"","groupDisplay":"实用工具文件","code":"/*\r\n * Academic License - for use in teaching, academic research, and meeting\r\n * course requirements at degree granting institutions only.  Not for\r\n * government, commercial, or other organizational use.\r\n *\r\n * File: rtGetNaN.h\r\n *\r\n * Code generated for Simulink model 'nczallcode'.\r\n *\r\n * Model version                  : 7.17\r\n * Simulink Coder version         : 24.1 (R2024a) 19-Nov-2023\r\n * C/C++ source code generated on : Wed Oct  9 14:09:47 2024\r\n *\r\n * Target selection: ert.tlc\r\n * Embedded hardware selection: NXP->Cortex-M4\r\n * Code generation objectives: Unspecified\r\n * Validation result: Not run\r\n */\r\n\r\n#ifndef rtGetNaN_h_\r\n#define rtGetNaN_h_\r\n#include \"rt_nonfinite.h\"\r\n#include \"rtwtypes.h\"\r\n\r\nextern real_T rtGetNaN(void);\r\nextern real32_T rtGetNaNF(void);\r\n\r\n#endif                                 /* rtGetNaN_h_ */\r\n\r\n/*\r\n * File trailer for generated code.\r\n *\r\n * [EOF]\r\n */\r\n"},{"name":"rt_nonfinite.c","type":"source","group":"utility","path":"E:\\repository\\Deeplearning\\small\\nczallcode_ert_rtw","tag":"","groupDisplay":"实用工具文件","code":"/*\r\n * Academic License - for use in teaching, academic research, and meeting\r\n * course requirements at degree granting institutions only.  Not for\r\n * government, commercial, or other organizational use.\r\n *\r\n * File: rt_nonfinite.c\r\n *\r\n * Code generated for Simulink model 'nczallcode'.\r\n *\r\n * Model version                  : 7.17\r\n * Simulink Coder version         : 24.1 (R2024a) 19-Nov-2023\r\n * C/C++ source code generated on : Wed Oct  9 14:09:47 2024\r\n *\r\n * Target selection: ert.tlc\r\n * Embedded hardware selection: NXP->Cortex-M4\r\n * Code generation objectives: Unspecified\r\n * Validation result: Not run\r\n */\r\n\r\n#include \"rtwtypes.h\"\r\n#include \"rt_nonfinite.h\"\r\n#include \"math.h\"\r\n\r\nreal_T rtNaN = -(real_T)NAN;\r\nreal_T rtInf = (real_T)INFINITY;\r\nreal_T rtMinusInf = -(real_T)INFINITY;\r\nreal32_T rtNaNF = -(real32_T)NAN;\r\nreal32_T rtInfF = (real32_T)INFINITY;\r\nreal32_T rtMinusInfF = -(real32_T)INFINITY;\r\n\r\n/* Test if value is infinite */\r\nboolean_T rtIsInf(real_T value)\r\n{\r\n  return (boolean_T)((value==rtInf || value==rtMinusInf) ? 1U : 0U);\r\n}\r\n\r\n/* Test if single-precision value is infinite */\r\nboolean_T rtIsInfF(real32_T value)\r\n{\r\n  return (boolean_T)(((value)==rtInfF || (value)==rtMinusInfF) ? 1U : 0U);\r\n}\r\n\r\n/* Test if value is not a number */\r\nboolean_T rtIsNaN(real_T value)\r\n{\r\n  return (boolean_T)(isnan(value) != 0);\r\n}\r\n\r\n/* Test if single-precision value is not a number */\r\nboolean_T rtIsNaNF(real32_T value)\r\n{\r\n  return (boolean_T)(isnan(value) != 0);\r\n}\r\n\r\n/*\r\n * File trailer for generated code.\r\n *\r\n * [EOF]\r\n */\r\n"},{"name":"rt_nonfinite.h","type":"header","group":"utility","path":"E:\\repository\\Deeplearning\\small\\nczallcode_ert_rtw","tag":"","groupDisplay":"实用工具文件","code":"/*\r\n * Academic License - for use in teaching, academic research, and meeting\r\n * course requirements at degree granting institutions only.  Not for\r\n * government, commercial, or other organizational use.\r\n *\r\n * File: rt_nonfinite.h\r\n *\r\n * Code generated for Simulink model 'nczallcode'.\r\n *\r\n * Model version                  : 7.17\r\n * Simulink Coder version         : 24.1 (R2024a) 19-Nov-2023\r\n * C/C++ source code generated on : Wed Oct  9 14:09:47 2024\r\n *\r\n * Target selection: ert.tlc\r\n * Embedded hardware selection: NXP->Cortex-M4\r\n * Code generation objectives: Unspecified\r\n * Validation result: Not run\r\n */\r\n\r\n#ifndef rt_nonfinite_h_\r\n#define rt_nonfinite_h_\r\n#include \"rtwtypes.h\"\r\n\r\nextern real_T rtInf;\r\nextern real_T rtMinusInf;\r\nextern real_T rtNaN;\r\nextern real32_T rtInfF;\r\nextern real32_T rtMinusInfF;\r\nextern real32_T rtNaNF;\r\nextern boolean_T rtIsInf(real_T value);\r\nextern boolean_T rtIsInfF(real32_T value);\r\nextern boolean_T rtIsNaN(real_T value);\r\nextern boolean_T rtIsNaNF(real32_T value);\r\n\r\n#endif                                 /* rt_nonfinite_h_ */\r\n\r\n/*\r\n * File trailer for generated code.\r\n *\r\n * [EOF]\r\n */\r\n"},{"name":"rtwtypes.h","type":"header","group":"utility","path":"E:\\repository\\Deeplearning\\small\\nczallcode_ert_rtw","tag":"","groupDisplay":"实用工具文件","code":"/*\r\n * Academic License - for use in teaching, academic research, and meeting\r\n * course requirements at degree granting institutions only.  Not for\r\n * government, commercial, or other organizational use.\r\n *\r\n * File: rtwtypes.h\r\n *\r\n * Code generated for Simulink model 'nczallcode'.\r\n *\r\n * Model version                  : 7.17\r\n * Simulink Coder version         : 24.1 (R2024a) 19-Nov-2023\r\n * C/C++ source code generated on : Wed Oct  9 14:09:47 2024\r\n *\r\n * Target selection: ert.tlc\r\n * Embedded hardware selection: NXP->Cortex-M4\r\n * Code generation objectives: Unspecified\r\n * Validation result: Not run\r\n */\r\n\r\n#ifndef RTWTYPES_H\r\n#define RTWTYPES_H\r\n\r\n/* Logical type definitions */\r\n#if (!defined(__cplusplus))\r\n#ifndef false\r\n#define false                          (0U)\r\n#endif\r\n\r\n#ifndef true\r\n#define true                           (1U)\r\n#endif\r\n#endif\r\n\r\n/*=======================================================================*\r\n * Target hardware information\r\n *   Device type: NXP->Cortex-M4\r\n *   Number of bits:     char:   8    short:   16    int:  32\r\n *                       long:  32\r\n *                       native word size:  32\r\n *   Byte ordering: LittleEndian\r\n *   Signed integer division rounds to: Zero\r\n *   Shift right on a signed integer as arithmetic shift: on\r\n *=======================================================================*/\r\n\r\n/*=======================================================================*\r\n * Fixed width word size data types:                                     *\r\n *   int8_T, int16_T, int32_T     - signed 8, 16, or 32 bit integers     *\r\n *   uint8_T, uint16_T, uint32_T  - unsigned 8, 16, or 32 bit integers   *\r\n *   real32_T, real64_T           - 32 and 64 bit floating point numbers *\r\n *=======================================================================*/\r\ntypedef signed char int8_T;\r\ntypedef unsigned char uint8_T;\r\ntypedef short int16_T;\r\ntypedef unsigned short uint16_T;\r\ntypedef int int32_T;\r\ntypedef unsigned int uint32_T;\r\ntypedef float real32_T;\r\ntypedef double real64_T;\r\n\r\n/*===========================================================================*\r\n * Generic type definitions: boolean_T, char_T, byte_T, int_T, uint_T,       *\r\n *                           real_T, time_T, ulong_T.                        *\r\n *===========================================================================*/\r\ntypedef double real_T;\r\ntypedef double time_T;\r\ntypedef unsigned char boolean_T;\r\ntypedef int int_T;\r\ntypedef unsigned int uint_T;\r\ntypedef unsigned long ulong_T;\r\ntypedef char char_T;\r\ntypedef unsigned char uchar_T;\r\ntypedef char_T byte_T;\r\n\r\n/*===========================================================================*\r\n * Complex number type definitions                                           *\r\n *===========================================================================*/\r\n#define CREAL_T\r\n\r\ntypedef struct {\r\n  real32_T re;\r\n  real32_T im;\r\n} creal32_T;\r\n\r\ntypedef struct {\r\n  real64_T re;\r\n  real64_T im;\r\n} creal64_T;\r\n\r\ntypedef struct {\r\n  real_T re;\r\n  real_T im;\r\n} creal_T;\r\n\r\n#define CINT8_T\r\n\r\ntypedef struct {\r\n  int8_T re;\r\n  int8_T im;\r\n} cint8_T;\r\n\r\n#define CUINT8_T\r\n\r\ntypedef struct {\r\n  uint8_T re;\r\n  uint8_T im;\r\n} cuint8_T;\r\n\r\n#define CINT16_T\r\n\r\ntypedef struct {\r\n  int16_T re;\r\n  int16_T im;\r\n} cint16_T;\r\n\r\n#define CUINT16_T\r\n\r\ntypedef struct {\r\n  uint16_T re;\r\n  uint16_T im;\r\n} cuint16_T;\r\n\r\n#define CINT32_T\r\n\r\ntypedef struct {\r\n  int32_T re;\r\n  int32_T im;\r\n} cint32_T;\r\n\r\n#define CUINT32_T\r\n\r\ntypedef struct {\r\n  uint32_T re;\r\n  uint32_T im;\r\n} cuint32_T;\r\n\r\n/*=======================================================================*\r\n * Min and Max:                                                          *\r\n *   int8_T, int16_T, int32_T     - signed 8, 16, or 32 bit integers     *\r\n *   uint8_T, uint16_T, uint32_T  - unsigned 8, 16, or 32 bit integers   *\r\n *=======================================================================*/\r\n#define MAX_int8_T                     ((int8_T)(127))\r\n#define MIN_int8_T                     ((int8_T)(-128))\r\n#define MAX_uint8_T                    ((uint8_T)(255U))\r\n#define MAX_int16_T                    ((int16_T)(32767))\r\n#define MIN_int16_T                    ((int16_T)(-32768))\r\n#define MAX_uint16_T                   ((uint16_T)(65535U))\r\n#define MAX_int32_T                    ((int32_T)(2147483647))\r\n#define MIN_int32_T                    ((int32_T)(-2147483647-1))\r\n#define MAX_uint32_T                   ((uint32_T)(0xFFFFFFFFU))\r\n\r\n/* Block D-Work pointer type */\r\ntypedef void * pointer_T;\r\n\r\n#endif                                 /* RTWTYPES_H */\r\n\r\n/*\r\n * File trailer for generated code.\r\n *\r\n * [EOF]\r\n */\r\n"}],"cm":{"GlobalVarInfo":[{"Name":"nczallcode.c:nczallcode_M_","Size":4,"File":["E:\\repository\\Deeplearning\\small\\nczallcode_ert_rtw\\nczallcode.c"],"IsStatic":true,"IsBitField":false,"IsExported":true,"UseCount":0,"Members":{"Name":"errorStatus","File":2,"Size":4,"IsStatic":false,"IsBitField":false,"IsExported":false,"UseCount":0,"Members":[],"UseInFunctions":[]},"UseInFunctions":[]},{"Name":"nczallcode_DW","Size":50240,"File":["E:\\repository\\Deeplearning\\small\\nczallcode_ert_rtw\\nczallcode.c"],"IsStatic":false,"IsBitField":false,"IsExported":true,"UseCount":49,"Members":[{"Name":"treeModel","File":2,"Size":15112,"IsStatic":false,"IsBitField":false,"IsExported":false,"UseCount":25,"Members":[{"Name":"CutPredictorIndex","File":25,"Size":1816,"IsStatic":false,"IsBitField":false,"IsExported":false,"UseCount":2,"Members":[],"UseInFunctions":{"FunctionName":"nczallcode_step","UseCount":2}},{"Name":"Children","File":25,"Size":3632,"IsStatic":false,"IsBitField":false,"IsExported":false,"UseCount":2,"Members":[],"UseInFunctions":{"FunctionName":"nczallcode_step","UseCount":2}},{"Name":"CutPoint","File":25,"Size":1816,"IsStatic":false,"IsBitField":false,"IsExported":false,"UseCount":2,"Members":[],"UseInFunctions":{"FunctionName":"nczallcode_step","UseCount":2}},{"Name":"PruneList","File":25,"Size":1816,"IsStatic":false,"IsBitField":false,"IsExported":false,"UseCount":2,"Members":[],"UseInFunctions":{"FunctionName":"nczallcode_step","UseCount":2}},{"Name":"NanCutPoints","File":25,"Size":227,"IsStatic":false,"IsBitField":false,"IsExported":false,"UseCount":2,"Members":[],"UseInFunctions":{"FunctionName":"nczallcode_step","UseCount":2}},{"Name":"InfCutPoints","File":25,"Size":227,"IsStatic":false,"IsBitField":false,"IsExported":false,"UseCount":1,"Members":[],"UseInFunctions":{"FunctionName":"nczallcode_step","UseCount":1}},{"Name":"ClassNamesLength","File":25,"Size":12,"IsStatic":false,"IsBitField":false,"IsExported":false,"UseCount":3,"Members":[],"UseInFunctions":{"FunctionName":"nczallcode_step","UseCount":3}},{"Name":"Prior","File":25,"Size":24,"IsStatic":false,"IsBitField":false,"IsExported":false,"UseCount":4,"Members":[],"UseInFunctions":{"FunctionName":"nczallcode_step","UseCount":4}},{"Name":"Cost","File":25,"Size":72,"IsStatic":false,"IsBitField":false,"IsExported":false,"UseCount":2,"Members":[],"UseInFunctions":{"FunctionName":"nczallcode_step","UseCount":2}},{"Name":"CharClassNamesLength","File":25,"Size":12,"IsStatic":false,"IsBitField":false,"IsExported":false,"UseCount":3,"Members":[],"UseInFunctions":{"FunctionName":"nczallcode_step","UseCount":3}},{"Name":"ClassProbability","File":25,"Size":5448,"IsStatic":false,"IsBitField":false,"IsExported":false,"UseCount":2,"Members":[],"UseInFunctions":{"FunctionName":"nczallcode_step","UseCount":2}}],"UseInFunctions":{"FunctionName":"nczallcode_step","UseCount":25}},{"Name":"Awake_sleep_average","File":2,"Size":384,"IsStatic":false,"IsBitField":false,"IsExported":false,"UseCount":0,"Members":[],"UseInFunctions":[]},{"Name":"onbednum","File":2,"Size":8,"IsStatic":false,"IsBitField":false,"IsExported":false,"UseCount":0,"Members":[],"UseInFunctions":[]},{"Name":"BREATH_COUNT","File":2,"Size":8,"IsStatic":false,"IsBitField":false,"IsExported":false,"UseCount":0,"Members":[],"UseInFunctions":[]},{"Name":"TRIGGER_COUNT","File":2,"Size":8,"IsStatic":false,"IsBitField":false,"IsExported":false,"UseCount":0,"Members":[],"UseInFunctions":[]},{"Name":"previousFramesArray","File":2,"Size":12288,"IsStatic":false,"IsBitField":false,"IsExported":false,"UseCount":0,"Members":[],"UseInFunctions":[]},{"Name":"BREATH_COUNTArray","File":2,"Size":128,"IsStatic":false,"IsBitField":false,"IsExported":false,"UseCount":0,"Members":[],"UseInFunctions":[]},{"Name":"conditionTriggerHistoryArray","File":2,"Size":640,"IsStatic":false,"IsBitField":false,"IsExported":false,"UseCount":0,"Members":[],"UseInFunctions":[]},{"Name":"TRIGGER_COUNTArray","File":2,"Size":128,"IsStatic":false,"IsBitField":false,"IsExported":false,"UseCount":0,"Members":[],"UseInFunctions":[]},{"Name":"dominantFrequencyArray","File":2,"Size":128,"IsStatic":false,"IsBitField":false,"IsExported":false,"UseCount":0,"Members":[],"UseInFunctions":[]},{"Name":"G_INBED_TIM","File":2,"Size":4,"IsStatic":false,"IsBitField":false,"IsExported":false,"UseCount":0,"Members":[],"UseInFunctions":[]},{"Name":"BREATH_RATE","File":2,"Size":4,"IsStatic":false,"IsBitField":false,"IsExported":false,"UseCount":1,"Members":[],"UseInFunctions":{"FunctionName":"nczallcode_step","UseCount":1}},{"Name":"MIN_SEND_N","File":2,"Size":4,"IsStatic":false,"IsBitField":false,"IsExported":false,"UseCount":1,"Members":[],"UseInFunctions":{"FunctionName":"nczallcode_step","UseCount":1}},{"Name":"STROKE_RISK_MIN","File":2,"Size":4,"IsStatic":false,"IsBitField":false,"IsExported":false,"UseCount":0,"Members":[],"UseInFunctions":[]},{"Name":"BREATH_MIN","File":2,"Size":4,"IsStatic":false,"IsBitField":false,"IsExported":false,"UseCount":2,"Members":[],"UseInFunctions":{"FunctionName":"nczallcode_step","UseCount":2}},{"Name":"BATCH_FRA_MEAN","File":2,"Size":2880,"IsStatic":false,"IsBitField":false,"IsExported":false,"UseCount":0,"Members":[],"UseInFunctions":[]},{"Name":"TWENTY_SEC","File":2,"Size":4,"IsStatic":false,"IsBitField":false,"IsExported":false,"UseCount":0,"Members":[],"UseInFunctions":[]},{"Name":"STATE_SLEEP","File":2,"Size":192,"IsStatic":false,"IsBitField":false,"IsExported":false,"UseCount":0,"Members":[],"UseInFunctions":[]},{"Name":"FRAME_DIFF","File":2,"Size":64,"IsStatic":false,"IsBitField":false,"IsExported":false,"UseCount":0,"Members":[],"UseInFunctions":[]},{"Name":"ITER","File":2,"Size":4,"IsStatic":false,"IsBitField":false,"IsExported":false,"UseCount":0,"Members":[],"UseInFunctions":[]},{"Name":"VARN","File":2,"Size":4,"IsStatic":false,"IsBitField":false,"IsExported":false,"UseCount":14,"Members":[],"UseInFunctions":[{"FunctionName":"nczallcode_step","UseCount":13},{"FunctionName":"nczallcode_initialize","UseCount":1}]},{"Name":"G_STATE_INBED","File":2,"Size":4,"IsStatic":false,"IsBitField":false,"IsExported":false,"UseCount":0,"Members":[],"UseInFunctions":[]},{"Name":"L_R_M_FREATUE","File":2,"Size":720,"IsStatic":false,"IsBitField":false,"IsExported":false,"UseCount":0,"Members":[],"UseInFunctions":[]},{"Name":"LEFT_RIGHT_MOVE_SUM","File":2,"Size":16,"IsStatic":false,"IsBitField":false,"IsExported":false,"UseCount":0,"Members":[],"UseInFunctions":[]},{"Name":"R_ALARM","File":2,"Size":720,"IsStatic":false,"IsBitField":false,"IsExported":false,"UseCount":0,"Members":[],"UseInFunctions":[]},{"Name":"BREATH_SW","File":2,"Size":4,"IsStatic":false,"IsBitField":false,"IsExported":false,"UseCount":0,"Members":[],"UseInFunctions":[]},{"Name":"PRESSURE_MEAN","File":2,"Size":4,"IsStatic":false,"IsBitField":false,"IsExported":false,"UseCount":0,"Members":[],"UseInFunctions":[]},{"Name":"ALARM_NUM","File":2,"Size":4,"IsStatic":false,"IsBitField":false,"IsExported":false,"UseCount":0,"Members":[],"UseInFunctions":[]},{"Name":"BODY_MOVE_NUM","File":2,"Size":4,"IsStatic":false,"IsBitField":false,"IsExported":false,"UseCount":0,"Members":[],"UseInFunctions":[]},{"Name":"ALL_MOVE_NUM","File":2,"Size":4,"IsStatic":false,"IsBitField":false,"IsExported":false,"UseCount":0,"Members":[],"UseInFunctions":[]},{"Name":"ONBED_SW","File":2,"Size":4,"IsStatic":false,"IsBitField":false,"IsExported":false,"UseCount":0,"Members":[],"UseInFunctions":[]},{"Name":"inBedTimer","File":2,"Size":4,"IsStatic":false,"IsBitField":false,"IsExported":false,"UseCount":0,"Members":[],"UseInFunctions":[]},{"Name":"PRO_FRAME","File":2,"Size":640,"IsStatic":false,"IsBitField":false,"IsExported":false,"UseCount":0,"Members":[],"UseInFunctions":[]},{"Name":"NCZ_TIMES","File":2,"Size":4,"IsStatic":false,"IsBitField":false,"IsExported":false,"UseCount":0,"Members":[],"UseInFunctions":[]},{"Name":"realArr","File":2,"Size":16000,"IsStatic":false,"IsBitField":false,"IsExported":false,"UseCount":0,"Members":[],"UseInFunctions":[]},{"Name":"ALL_DIFF_IMG","File":2,"Size":96,"IsStatic":false,"IsBitField":false,"IsExported":false,"UseCount":0,"Members":[],"UseInFunctions":[]},{"Name":"SEND_DATA_N","File":2,"Size":4,"IsStatic":false,"IsBitField":false,"IsExported":false,"UseCount":4,"Members":[],"UseInFunctions":{"FunctionName":"nczallcode_step","UseCount":4}},{"Name":"STROKE_RISK","File":2,"Size":4,"IsStatic":false,"IsBitField":false,"IsExported":false,"UseCount":0,"Members":[],"UseInFunctions":[]},{"Name":"treeModel_not_empty","File":2,"Size":1,"IsStatic":false,"IsBitField":false,"IsExported":false,"UseCount":2,"Members":[],"UseInFunctions":{"FunctionName":"nczallcode_step","UseCount":2}}],"UseInFunctions":[{"FunctionName":"nczallcode_step","UseCount":48},{"FunctionName":"nczallcode_initialize","UseCount":1}]},{"Name":"nczallcode_U","Size":644,"File":["E:\\repository\\Deeplearning\\small\\nczallcode_ert_rtw\\nczallcode.c"],"IsStatic":false,"IsBitField":false,"IsExported":true,"UseCount":11,"Members":[{"Name":"frameData","File":2,"Size":640,"IsStatic":false,"IsBitField":false,"IsExported":false,"UseCount":11,"Members":[],"UseInFunctions":{"FunctionName":"nczallcode_step","UseCount":11}},{"Name":"tim","File":2,"Size":4,"IsStatic":false,"IsBitField":false,"IsExported":false,"UseCount":0,"Members":[],"UseInFunctions":[]}],"UseInFunctions":{"FunctionName":"nczallcode_step","UseCount":11}},{"Name":"nczallcode_Y","Size":964,"File":["E:\\repository\\Deeplearning\\small\\nczallcode_ert_rtw\\nczallcode.c"],"IsStatic":false,"IsBitField":false,"IsExported":true,"UseCount":15,"Members":[{"Name":"bodyMovementData","File":2,"Size":96,"IsStatic":false,"IsBitField":false,"IsExported":false,"UseCount":1,"Members":[],"UseInFunctions":{"FunctionName":"nczallcode_step","UseCount":1}},{"Name":"rate","File":2,"Size":4,"IsStatic":false,"IsBitField":false,"IsExported":false,"UseCount":1,"Members":[],"UseInFunctions":{"FunctionName":"nczallcode_step","UseCount":1}},{"Name":"strokerisk","File":2,"Size":4,"IsStatic":false,"IsBitField":false,"IsExported":false,"UseCount":1,"Members":[],"UseInFunctions":{"FunctionName":"nczallcode_step","UseCount":1}},{"Name":"stateInBbed","File":2,"Size":4,"IsStatic":false,"IsBitField":false,"IsExported":false,"UseCount":1,"Members":[],"UseInFunctions":{"FunctionName":"nczallcode_step","UseCount":1}},{"Name":"inBedtime","File":2,"Size":4,"IsStatic":false,"IsBitField":false,"IsExported":false,"UseCount":1,"Members":[],"UseInFunctions":{"FunctionName":"nczallcode_step","UseCount":1}},{"Name":"rateMin","File":2,"Size":4,"IsStatic":false,"IsBitField":false,"IsExported":false,"UseCount":1,"Members":[],"UseInFunctions":{"FunctionName":"nczallcode_step","UseCount":1}},{"Name":"strokeriskMin","File":2,"Size":4,"IsStatic":false,"IsBitField":false,"IsExported":false,"UseCount":1,"Members":[],"UseInFunctions":{"FunctionName":"nczallcode_step","UseCount":1}},{"Name":"statesleep","File":2,"Size":192,"IsStatic":false,"IsBitField":false,"IsExported":false,"UseCount":1,"Members":[],"UseInFunctions":{"FunctionName":"nczallcode_step","UseCount":1}},{"Name":"timt","File":2,"Size":4,"IsStatic":false,"IsBitField":false,"IsExported":false,"UseCount":1,"Members":[],"UseInFunctions":{"FunctionName":"nczallcode_step","UseCount":1}},{"Name":"meansn","File":2,"Size":4,"IsStatic":false,"IsBitField":false,"IsExported":false,"UseCount":1,"Members":[],"UseInFunctions":{"FunctionName":"nczallcode_step","UseCount":1}},{"Name":"frame_img","File":2,"Size":640,"IsStatic":false,"IsBitField":false,"IsExported":false,"UseCount":2,"Members":[],"UseInFunctions":{"FunctionName":"nczallcode_step","UseCount":2}},{"Name":"pos","File":2,"Size":4,"IsStatic":false,"IsBitField":false,"IsExported":false,"UseCount":3,"Members":[],"UseInFunctions":{"FunctionName":"nczallcode_step","UseCount":3}}],"UseInFunctions":{"FunctionName":"nczallcode_step","UseCount":15}},{"Name":"rtInf","Size":8,"File":["E:\\repository\\Deeplearning\\small\\nczallcode_ert_rtw\\rt_nonfinite.c"],"IsStatic":false,"IsBitField":false,"IsExported":true,"UseCount":1,"Members":[],"UseInFunctions":{"FunctionName":"rtIsInf","UseCount":1}},{"Name":"rtInfF","Size":4,"File":["E:\\repository\\Deeplearning\\small\\nczallcode_ert_rtw\\rt_nonfinite.c"],"IsStatic":false,"IsBitField":false,"IsExported":true,"UseCount":1,"Members":[],"UseInFunctions":{"FunctionName":"rtIsInfF","UseCount":1}},{"Name":"rtMinusInf","Size":8,"File":["E:\\repository\\Deeplearning\\small\\nczallcode_ert_rtw\\rt_nonfinite.c"],"IsStatic":false,"IsBitField":false,"IsExported":true,"UseCount":1,"Members":[],"UseInFunctions":{"FunctionName":"rtIsInf","UseCount":1}},{"Name":"rtMinusInfF","Size":4,"File":["E:\\repository\\Deeplearning\\small\\nczallcode_ert_rtw\\rt_nonfinite.c"],"IsStatic":false,"IsBitField":false,"IsExported":true,"UseCount":1,"Members":[],"UseInFunctions":{"FunctionName":"rtIsInfF","UseCount":1}},{"Name":"rtNaN","Size":8,"File":["E:\\repository\\Deeplearning\\small\\nczallcode_ert_rtw\\rt_nonfinite.c"],"IsStatic":false,"IsBitField":false,"IsExported":true,"UseCount":1,"Members":[],"UseInFunctions":{"FunctionName":"rtGetNaN","UseCount":1}},{"Name":"rtNaNF","Size":4,"File":["E:\\repository\\Deeplearning\\small\\nczallcode_ert_rtw\\rt_nonfinite.c"],"IsStatic":false,"IsBitField":false,"IsExported":true,"UseCount":2,"Members":[],"UseInFunctions":[{"FunctionName":"nczallcode_step","UseCount":1},{"FunctionName":"rtGetNaNF","UseCount":1}]}],"GlobalConstInfo":[],"FcnInfo":[{"Name":"__isnan","UniqueKey":"$__isnan","Idx":1,"NumCommentLines":0,"NumTotalLines":0,"NumCodeLines":0,"Callee":[],"Caller":[{"Name":"rtIsNaN","Weight":1},{"Name":"rtIsNaNF","Weight":1}],"Stack":0,"HasDefinition":0,"File":["E:\\Program Files\\MATLAB\\R2024a\\polyspace\\verifier\\cxx\\include\\include-libc\\bits\\mathcalls.h"],"IsStatic":0,"Complexity":0,"StackTotal":0,"CalleeIdx":[]},{"Name":"__isnanf","UniqueKey":"$__isnanf","Idx":2,"NumCommentLines":0,"NumTotalLines":0,"NumCodeLines":0,"Callee":[],"Caller":[{"Name":"rtIsNaN","Weight":1},{"Name":"rtIsNaNF","Weight":1}],"Stack":0,"HasDefinition":0,"File":["E:\\Program Files\\MATLAB\\R2024a\\polyspace\\verifier\\cxx\\include\\include-libc\\bits\\mathcalls.h"],"IsStatic":0,"Complexity":0,"StackTotal":0,"CalleeIdx":[]},{"Name":"__isnanl","UniqueKey":"$__isnanl","Idx":3,"NumCommentLines":0,"NumTotalLines":0,"NumCodeLines":0,"Callee":[],"Caller":[{"Name":"rtIsNaN","Weight":1},{"Name":"rtIsNaNF","Weight":1}],"Stack":0,"HasDefinition":0,"File":["E:\\Program Files\\MATLAB\\R2024a\\polyspace\\verifier\\cxx\\include\\include-libc\\bits\\mathcalls.h"],"IsStatic":0,"Complexity":0,"StackTotal":0,"CalleeIdx":[]},{"Name":"fmin","UniqueKey":"$fmin","Idx":4,"NumCommentLines":0,"NumTotalLines":0,"NumCodeLines":0,"Callee":[],"Caller":{"Name":"nczallcode.c:nczallcode_insertionsort","Weight":1},"Stack":0,"HasDefinition":0,"File":["E:\\Program Files\\MATLAB\\R2024a\\polyspace\\verifier\\cxx\\include\\include-libc\\bits\\mathcalls.h"],"IsStatic":0,"Complexity":0,"StackTotal":0,"CalleeIdx":[]},{"Name":"memcpy","UniqueKey":"$memcpy","Idx":5,"NumCommentLines":0,"NumTotalLines":0,"NumCodeLines":0,"Callee":[],"Caller":{"Name":"nczallcode_step","Weight":2},"Stack":0,"HasDefinition":0,"File":["E:\\Program Files\\MATLAB\\R2024a\\polyspace\\verifier\\cxx\\include\\include-libc\\string.h"],"IsStatic":0,"Complexity":0,"StackTotal":0,"CalleeIdx":[]},{"Name":"nczallcode.c:ncza_ClassificationTree_predict","UniqueKey":"$nczallcode.c:ncza_ClassificationTree_predict","Idx":6,"NumCommentLines":0,"NumTotalLines":191,"NumCodeLines":167,"Callee":[{"Name":"rtIsNaN","Weight":6},{"Name":"nczallcode.c:nczallcode_strtrim","Weight":1},{"Name":"nczallcode.c:nczallc_categorical_categorical","Weight":1}],"Caller":{"Name":"nczallcode_step","Weight":1},"Stack":1702,"HasDefinition":1,"File":["E:\\repository\\Deeplearning\\small\\nczallcode_ert_rtw\\nczallcode.c"],"IsStatic":1,"Complexity":25,"StackTotal":1883,"CalleeIdx":[19,10,7]},{"Name":"nczallcode.c:nczallc_categorical_categorical","UniqueKey":"$nczallcode.c:nczallc_categorical_categorical","Idx":7,"NumCommentLines":0,"NumTotalLines":61,"NumCodeLines":54,"Callee":[{"Name":"nczallcode.c:nczallcode_strtrim","Weight":2},{"Name":"nczallcode.c:nczallcode_introsort","Weight":1}],"Caller":{"Name":"nczallcode.c:ncza_ClassificationTree_predict","Weight":1},"Stack":125,"HasDefinition":1,"File":["E:\\repository\\Deeplearning\\small\\nczallcode_ert_rtw\\nczallcode.c"],"IsStatic":1,"Complexity":9,"StackTotal":181,"CalleeIdx":[10,9]},{"Name":"nczallcode.c:nczallcode_insertionsort","UniqueKey":"$nczallcode.c:nczallcode_insertionsort","Idx":8,"NumCommentLines":0,"NumTotalLines":58,"NumCodeLines":51,"Callee":{"Name":"fmin","Weight":1},"Caller":{"Name":"nczallcode.c:nczallcode_introsort","Weight":1},"Stack":48,"HasDefinition":1,"File":["E:\\repository\\Deeplearning\\small\\nczallcode_ert_rtw\\nczallcode.c"],"IsStatic":1,"Complexity":8,"StackTotal":48,"CalleeIdx":4},{"Name":"nczallcode.c:nczallcode_introsort","UniqueKey":"$nczallcode.c:nczallcode_introsort","Idx":9,"NumCommentLines":0,"NumTotalLines":5,"NumCodeLines":1,"Callee":{"Name":"nczallcode.c:nczallcode_insertionsort","Weight":1},"Caller":{"Name":"nczallcode.c:nczallc_categorical_categorical","Weight":1},"Stack":8,"HasDefinition":1,"File":["E:\\repository\\Deeplearning\\small\\nczallcode_ert_rtw\\nczallcode.c"],"IsStatic":1,"Complexity":1,"StackTotal":56,"CalleeIdx":8},{"Name":"nczallcode.c:nczallcode_strtrim","UniqueKey":"$nczallcode.c:nczallcode_strtrim","Idx":10,"NumCommentLines":0,"NumTotalLines":42,"NumCodeLines":34,"Callee":[],"Caller":[{"Name":"nczallcode.c:nczallc_categorical_categorical","Weight":2},{"Name":"nczallcode.c:ncza_ClassificationTree_predict","Weight":1}],"Stack":28,"HasDefinition":1,"File":["E:\\repository\\Deeplearning\\small\\nczallcode_ert_rtw\\nczallcode.c"],"IsStatic":1,"Complexity":5,"StackTotal":28,"CalleeIdx":[]},{"Name":"nczallcode_initialize","UniqueKey":"$nczallcode_initialize","Idx":11,"NumCommentLines":1,"NumTotalLines":5,"NumCodeLines":1,"Callee":[],"Caller":[],"Stack":0,"HasDefinition":1,"File":["E:\\repository\\Deeplearning\\small\\nczallcode_ert_rtw\\nczallcode.c"],"IsStatic":0,"Complexity":1,"StackTotal":0,"CalleeIdx":[]},{"Name":"nczallcode_step","UniqueKey":"$nczallcode_step","Idx":12,"NumCommentLines":49,"NumTotalLines":461,"NumCodeLines":374,"Callee":[{"Name":"roundf","Weight":1},{"Name":"memcpy","Weight":2},{"Name":"rtIsNaNF","Weight":3},{"Name":"nczallcode.c:ncza_ClassificationTree_predict","Weight":1}],"Caller":[],"Stack":1303,"HasDefinition":1,"File":["E:\\repository\\Deeplearning\\small\\nczallcode_ert_rtw\\nczallcode.c"],"IsStatic":0,"Complexity":25,"StackTotal":3186,"CalleeIdx":[14,5,20,6]},{"Name":"nczallcode_terminate","UniqueKey":"$nczallcode_terminate","Idx":13,"NumCommentLines":1,"NumTotalLines":4,"NumCodeLines":0,"Callee":[],"Caller":[],"Stack":0,"HasDefinition":1,"File":["E:\\repository\\Deeplearning\\small\\nczallcode_ert_rtw\\nczallcode.c"],"IsStatic":0,"Complexity":1,"StackTotal":0,"CalleeIdx":[]},{"Name":"roundf","UniqueKey":"$roundf","Idx":14,"NumCommentLines":0,"NumTotalLines":0,"NumCodeLines":0,"Callee":[],"Caller":{"Name":"nczallcode_step","Weight":1},"Stack":0,"HasDefinition":0,"File":["E:\\Program Files\\MATLAB\\R2024a\\polyspace\\verifier\\cxx\\include\\include-libc\\bits\\mathcalls.h"],"IsStatic":0,"Complexity":0,"StackTotal":0,"CalleeIdx":[]},{"Name":"rtGetNaN","UniqueKey":"$rtGetNaN","Idx":15,"NumCommentLines":0,"NumTotalLines":4,"NumCodeLines":1,"Callee":[],"Caller":[],"Stack":8,"HasDefinition":1,"File":["E:\\repository\\Deeplearning\\small\\nczallcode_ert_rtw\\rtGetNaN.c"],"IsStatic":0,"Complexity":1,"StackTotal":8,"CalleeIdx":[]},{"Name":"rtGetNaNF","UniqueKey":"$rtGetNaNF","Idx":16,"NumCommentLines":0,"NumTotalLines":4,"NumCodeLines":1,"Callee":[],"Caller":[],"Stack":4,"HasDefinition":1,"File":["E:\\repository\\Deeplearning\\small\\nczallcode_ert_rtw\\rtGetNaN.c"],"IsStatic":0,"Complexity":1,"StackTotal":4,"CalleeIdx":[]},{"Name":"rtIsInf","UniqueKey":"$rtIsInf","Idx":17,"NumCommentLines":0,"NumTotalLines":4,"NumCodeLines":1,"Callee":[],"Caller":[],"Stack":9,"HasDefinition":1,"File":["E:\\repository\\Deeplearning\\small\\nczallcode_ert_rtw\\rt_nonfinite.c"],"IsStatic":0,"Complexity":2,"StackTotal":9,"CalleeIdx":[]},{"Name":"rtIsInfF","UniqueKey":"$rtIsInfF","Idx":18,"NumCommentLines":0,"NumTotalLines":4,"NumCodeLines":1,"Callee":[],"Caller":[],"Stack":5,"HasDefinition":1,"File":["E:\\repository\\Deeplearning\\small\\nczallcode_ert_rtw\\rt_nonfinite.c"],"IsStatic":0,"Complexity":2,"StackTotal":5,"CalleeIdx":[]},{"Name":"rtIsNaN","UniqueKey":"$rtIsNaN","Idx":19,"NumCommentLines":0,"NumTotalLines":4,"NumCodeLines":1,"Callee":[{"Name":"__isnanf","Weight":1},{"Name":"__isnan","Weight":1},{"Name":"__isnanl","Weight":1}],"Caller":{"Name":"nczallcode.c:ncza_ClassificationTree_predict","Weight":6},"Stack":9,"HasDefinition":1,"File":["E:\\repository\\Deeplearning\\small\\nczallcode_ert_rtw\\rt_nonfinite.c"],"IsStatic":0,"Complexity":3,"StackTotal":9,"CalleeIdx":[2,1,3]},{"Name":"rtIsNaNF","UniqueKey":"$rtIsNaNF","Idx":20,"NumCommentLines":0,"NumTotalLines":4,"NumCodeLines":1,"Callee":[{"Name":"__isnanf","Weight":1},{"Name":"__isnan","Weight":1},{"Name":"__isnanl","Weight":1}],"Caller":{"Name":"nczallcode_step","Weight":3},"Stack":5,"HasDefinition":1,"File":["E:\\repository\\Deeplearning\\small\\nczallcode_ert_rtw\\rt_nonfinite.c"],"IsStatic":0,"Complexity":3,"StackTotal":5,"CalleeIdx":[2,1,3]}]},"features":{"annotation":false,"coverage":true,"profiling":true,"tooltip":true,"coverageTooltip":true,"showJustificationLinks":true,"useMWTable":false,"showProfilingInfo":true,"showTaskSummary":true,"showProtectedV2Report":true}};